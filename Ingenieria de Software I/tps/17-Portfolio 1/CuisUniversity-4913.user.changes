

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (7 October 2021 20:21:22) as C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\CuisUniversity-4532.image!


----End fileIn of \Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/7/2021 20:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/7/2021 20:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:26:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:26:19'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/7/2021 20:26:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/7/2021 20:26:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/7/2021 20:26:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/7/2021 20:26:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:26:19'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:27:18'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'GRC 10/7/2021 20:31:39' prior: 50859550!
balance

	^transactions sum: [ :aTransaction | aTransaction balanceDifference ] ifEmpty: [ 0 ]! !
!Deposit methodsFor: 'value' stamp: 'GRC 10/7/2021 20:31:49'!
balanceDifference

	^ value! !
!Withdraw methodsFor: 'value' stamp: 'GRC 10/7/2021 20:32:43'!
balanceDifference

	^ (0 - value).! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/7/2021 20:32:51'!
PASSED!
!Withdraw methodsFor: 'value' stamp: 'GRC 10/7/2021 20:33:14' prior: 50859611!
balanceDifference

	^ value negative.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/7/2021 20:33:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:33:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:33:15'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/7/2021 20:33:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/7/2021 20:33:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/7/2021 20:33:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/7/2021 20:33:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:33:15'!
ERROR!

----End fileIn of C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\Packages\TerseGuide.pck.st----!
!Withdraw methodsFor: 'value' stamp: 'GRC 10/7/2021 20:34:55' prior: 50859646!
balanceDifference

	^ value withNegativeSign.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/7/2021 20:34:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:34:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/7/2021 20:34:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/7/2021 20:34:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/7/2021 20:34:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/7/2021 20:34:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/7/2021 20:34:57'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/7/2021 20:38:28'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'GRC 10/7/2021 20:38:39'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'GRC 10/7/2021 20:40:01'!
test01

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance.! !

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:40:11'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:40:19'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:40:25' prior: 50862670!
balance
	
	^0.! !

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:40:28'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:40:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:41:05'!
test02

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:42:52' prior: 50862683!
test02

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	portfolio addAccount: cuenta.
	
	self assert: 0 equals: portfolio balance.! !

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:42:54'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:43:00'!
addAccount: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/7/2021 20:43:42'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:43:40' prior: 50862701!
addAccount: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:43:45'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:44:11' overrides: 16896425!
initialize

	accounts _ OrderedCollection new.! !

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:44:17'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:44:17'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:44:17'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:46:36'!
test03

	| portfolio cuenta transaccion1 |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion1 _ AccountTransaction new.
	
	portfolio addAccount: cuenta.
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:47:09' prior: 50862734!
test03

	| portfolio cuenta transaccion1 |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion1 _ AccountTransaction register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:47:40' prior: 50862745!
test03

	| portfolio cuenta transaccion1 |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion1 _ AccountTransaction register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:48:01' prior: 50862756!
test03

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ AccountTransaction register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:48:06'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:49:16' prior: 50862767!
test03

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:49:23'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:50:24'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:50:28'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:50:49'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:51:41' prior: 50862675!
balance
	
	^ accounts first balance.! !

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:51:45'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:51:45'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:51:45'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:51:46'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:51:46'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:52:34' prior: 50862801!
balance
	
	accounts ifEmpty: [^0].
	^ accounts first balance.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:52:50' prior: 50862817!
balance
	
	accounts isEmpty ifTrue: [^0].
	^ accounts first balance.! !

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:52:51'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:52:51'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:52:51'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:53:17'!
test04

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:53:27' prior: 50862834!
test04

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:53:34' prior: 50862781!
test03

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:54:35' prior: 50862845!
test04

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta.
	
	Deposit register: 100 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 20:54:37'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:54:52' prior: 50862865!
test04

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta.
	
	Deposit register: 100 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 150 equals: portfolio balance.! !

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 20:54:53'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:54:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:54:53'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:54:53'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 20:54:53'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:55:59' prior: 50862879!
test04

	| portfolio cuenta1 cuenta2 |
	
	portfolio _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	
	Deposit register: 100 on: cuenta2.
	
	portfolio addAccount: cuenta1.
	
	portfolio addAccount: cuenta2.
	
	self assert: 150 equals: portfolio balance.! !

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 20:56:04'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:56:55' prior: 50862822!
balance
	
	accounts isEmpty ifTrue: [^0].
	^ accounts sum: [:anAccount | anAccount balance].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:58:06' prior: 50862918!
balance
	
	^accounts sum: [:anAccount | anAccount balance] ifEmpty: [^0].! !

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 20:58:07'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:58:07'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:58:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:58:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 20:58:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 20:58:42'!
test05

	| portfolio cuenta1 cuenta2 |
	
	portfolio _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	
	Withdraw register: 100 on: cuenta2.
	
	portfolio addAccount: cuenta1.
	
	portfolio addAccount: cuenta2.
	
	self assert: -50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 20:58:49'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 20:58:49'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 20:58:49'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 20:58:49'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 20:58:49'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 20:58:49'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:01:22' prior: 50862941!
test05

	| portfolio portfolio2 cuenta1 cuenta2 |
	
	portfolio _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	
	Withdraw register: 100 on: cuenta2.
	
	portfolio addAccount: cuenta1.
	
	portfolio addAccount: cuenta2.
	
	self assert: 150 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:01:30' prior: 50862969!
test05

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	portfolio1 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	
	Withdraw register: 100 on: cuenta2.
	
	portfolio1 addAccount: cuenta1.
	
	portfolio1 addAccount: cuenta2.
	
	self assert: 150 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:02:24' prior: 50862983!
test05

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	Deposit register: 100 on: cuenta2.
	
	portfolio1 addAccount: cuenta1.
	portfolio2 addAccount: cuenta2.
	
	portfolio1 addPortfolio: portfolio2. 
	
	self assert: 150 equals: portfolio1 balance.! !

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:02:32'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:02:38'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/7/2021 21:03:14'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:03:11' prior: 50863015!
addPortfolio: aPortfolio 

	portfolios _ aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:03:20' prior: 50863028!
addPortfolio: aPortfolio 

	portfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:03:23'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:03:40' prior: 50862722 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.! !

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:03:45'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:04:58' prior: 50862924!
balance
	
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty: [^0]) + (portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [^0]).! !

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:05:36'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:06:31' prior: 50863050!
balance
	
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]) + (portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]).! !

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:06:32'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:06:32'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:06:32'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:06:33'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:06:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:06:33'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:09:06'!
test06

	| portfolio1 cuenta1 |
	
	portfolio1 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	
	portfolio1 addAccount: cuenta1.
	
	self assert: 1 equals: portfolio1 transactions.! !

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:09:18'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:09:26'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:10:20' prior: 50863094!
transactions

	^ accounts sum: [:anAccount | anAccount transactions].! !

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:10:22'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:11:28' prior: 50863082!
test06

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self assert: portfolio1 transactions isEmpty.! !

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:11:42'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:12:20' prior: 50863099!
transactions

	^OrderedCollection new.! !

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:12:22'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:12:22'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:12:22'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:12:22'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:12:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:12:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:12:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:14:14'!
test07

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: transaccion equals: portfolio transactions.! !

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:14:18'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:16:31' prior: 50863116!
transactions

	| transactions |
	
	transactions _ OrderedCollection new.

	accounts do: [:anAccount | transactions add: anAccount transactions].
	
	^ transactions.! !

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:16:35'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:17:32' prior: 50863151!
transactions

	| transactions |
	
	transactions _ OrderedCollection new.

	accounts do: [:anAccount | transactions addAll: anAccount transactions].
	
	^ transactions.! !

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:17:36'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:17:36'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:17:36'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:17:36'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:17:36'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:17:36'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:17:36'!
FAILURE!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:17:36'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:18:03' prior: 50863137!
test07

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: {transaccion} equals: portfolio transactions.! !

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:18:04'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:18:40' prior: 50863190!
test07

	| portfolio cuenta transaccions |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccions _ OrderedCollection with: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transaccions equals: portfolio transactions.! !

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:18:41'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:18:57' prior: 50863204!
test07

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection with: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:20:08' prior: 50863235!
test07

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:20:09'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:20:54'!
test08

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	transacciones add: (Deposit register: 100 on: cuenta).
	transacciones add: (Withdraw register: 100 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/7/2021 21:20:57'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:21:27'!
test09

	| portfolio cuenta cuenta2 transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	transacciones add: (Deposit register: 100 on: cuenta).
	transacciones add: (Withdraw register: 100 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:21:48' prior: 50863315!
test09

	| portfolio cuenta1 cuenta2 transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta1).
	transacciones add: (Withdraw register: 100 on: cuenta1).
	
	portfolio addAccount: cuenta1.
	
	self assert: transacciones equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:22:24' prior: 50863332!
test09

	| portfolio cuenta1 cuenta2 transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio addAccount: cuenta1.
	portfolio addAccount: cuenta2.
	
	self assert: transacciones equals: portfolio transactions.! !

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/7/2021 21:22:26'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:22:47' prior: 50863349!
test09

	| portfolio1 cuenta1 cuenta2 transacciones |
	
	portfolio1 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio1 addAccount: cuenta1.
	portfolio1 addAccount: cuenta2.
	
	self assert: transacciones equals: portfolio1 transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:23:21'!
test10

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio1 addAccount: cuenta1.
	portfolio2 addAccount: cuenta2.
	
	self assert: transacciones equals: portfolio1 transactions.! !

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/7/2021 21:23:28'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:24:39' prior: 50863162!
transactions

	| transactions |
	
	transactions _ OrderedCollection new.

	accounts do: [:anAccount | transactions addAll: anAccount transactions].
	portfolios do: [:aPortfolio | transactions addAll: aPortfolio transactions].
	
	^ transactions.! !

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/7/2021 21:24:43'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/7/2021 21:25:35' prior: 50863410!
test10

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio1 addAccount: cuenta1.
	portfolio2 addAccount: cuenta2.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: transacciones equals: portfolio1 transactions.! !

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/7/2021 21:25:36'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/7/2021 21:25:36'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/7/2021 21:25:36'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/7/2021 21:25:36'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/7/2021 21:25:36'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/7/2021 21:25:36'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/7/2021 21:25:36'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/7/2021 21:25:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/7/2021 21:25:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/7/2021 21:25:37'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/7/2021 21:25:37'!
PASSED!

----SNAPSHOT----(7 October 2021 21:26:09) CuisUniversity-4532.image priorSource: 16885703!

----QUIT----(7 October 2021 21:55:13) CuisUniversity-4532.image priorSource: 17018973!

----STARTUP---- (11 October 2021 14:10:21) as C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\CuisUniversity-4532.image!


----QUIT----(11 October 2021 14:12:15) CuisUniversity-4532.image priorSource: 17019065!

----STARTUP---- (11 October 2021 14:43:23) as C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 14:49:32'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 14:53:46'!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error]
		withExceptionDo: [:anError | anError messageText = Portfolio cannotAddItselfErrorDescription].! !

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 14:53:55'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 14:54:57' prior: 50863539!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error]
		withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio cannotAddItselfErrorDescription].! !

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 14:55:06'!
FAILURE!

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 14:56:09'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 14:59:19' prior: 50863033!
addPortfolio: aPortfolio 

	self = aPortfolio ifTrue: [^self error: self cannotAddItselfErrorDescription].

	portfolios add: aPortfolio.! !
!Portfolio class methodsFor: 'no messages' stamp: 'GRC 10/11/2021 14:59:49'!
cannotAddItselfErrorDescription

	^'Cannot add a portfolio to itself'.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:00:12' prior: 50863572!
addPortfolio: aPortfolio 

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription].

	portfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:00:17'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:01:08' prior: 50863554!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	portfolio1 addPortfolio: portfolio1.
	
	"self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error]
		withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio cannotAddItselfErrorDescription]."! !

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:01:10'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:01:33' prior: 50863617!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error]
		withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio cannotAddItselfErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:01:51' prior: 50863633!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error]
		withExceptionDo: [:anError | self assert: anError messageText = Portfolio cannotAddItselfErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:02:26' prior: 50863645!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error - MessageNotUnderstood ]
		withExceptionDo: [:anError | self assert: anError messageText = Portfolio cannotAddItselfErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:02:54' prior: 50863657!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error - MessageNotUnderstood ]
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:02:59'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:04:53' prior: 50863585!
addPortfolio: aPortfolio 

	self = aPortfolio ifTrue: [self error: Portfolio cannotAddItselfErrorDescription].

	portfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:04:57'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:05:09' prior: 50863685!
addPortfolio: aPortfolio 

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription].

	portfolios add: aPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:05:34' prior: 50863670!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	portfolio1 addPortfolio: portfolio1.
	
	"self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error - MessageNotUnderstood ]
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText]."! !

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:05:36'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:06:38' prior: 50863727!
test11CantAddPortfolioToItself

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	
	"self should: [portfolio1 addPortfolio: portfolio1] 
		raise: [Error - MessageNotUnderstood ]
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText]."! !

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:06:40'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:08:49' prior: 50863744!
test11CantAddPortfolioToItself

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:08:54' prior: 50863789!
test11CantAddPortfolioToItself

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:09:04' prior: 50863804!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/11/2021 15:09:05'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:09:06'!
PASSED!

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:09:06'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:10:20'!
test12CantAddPortfolioToItself

	| portfolio1 cuenta |
	
	portfolio1 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test12CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!testRun: #PortfolioTest #test12CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:10:36'!
PASSED!

!methodRemoval: PortfolioTest #test12CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:10:49'!
test12CantAddPortfolioToItself

	| portfolio1 cuenta |
	
	portfolio1 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:10:56'!
test11CannotAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test11CantAddPortfolioToItself stamp: 'GRC 10/11/2021 15:10:56'!
test11CantAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:12:51'!
test12CannotAddAPortfolioThatContainsItself

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:13:33' prior: 50863942!
test12CannotAddAPortfolioThatContainsItself

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	"cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta."
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:13:44' prior: 50863959!
test12CannotAddAPortfolioThatContainsItself

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	"cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta."
	
	self should: [portfolio1 addPortfolio: portfolio2] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:14:00' prior: 50863976!
test12CannotAddAPortfolioThatContainsItself

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	"cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta."
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddItselfErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test12CannotAddAPortfolioThatContainsItself stamp: 'GRC 10/11/2021 15:14:03'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:15:26' prior: 50863719!
addPortfolio: aPortfolio 

	self assertCanAddPortfolio: aPortfolio.

	"self = aPortfolio ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription]."

	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:15:36' prior: 50864014!
addPortfolio: aPortfolio 

	self assertCanAddPortfolio: aPortfolio.

	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:15:51'!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:16:57' prior: 50864029!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription].
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:20:49' prior: 50864036!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription].
	
	aPortfolio contains: self ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription]
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:21:00' prior: 50864043!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription].
	
	(aPortfolio contains: self) ifTrue: [^self error: Portfolio cannotAddItselfErrorDescription]
	
! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:21:58'!
cannotAddPortfolioErrorDescription

	^'Cannot add a portfolio to itself'.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:21:58' prior: 50863993!
test12CannotAddAPortfolioThatContainsItself

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	"cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta."
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:21:58' prior: 50863919!
test11CannotAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:21:58' prior: 50864053!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddPortfolioErrorDescription].
	
	(aPortfolio contains: self) ifTrue: [^self error: Portfolio cannotAddPortfolioErrorDescription]
	
! !

!methodRemoval: Portfolio class #cannotAddItselfErrorDescription stamp: 'GRC 10/11/2021 15:21:58'!
cannotAddItselfErrorDescription

	^'Cannot add a portfolio to itself'.!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:22:17' prior: 50864063!
cannotAddPortfolioErrorDescription

	^'Cannot add a portfolio'.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:22:23' prior: 50864114!
cannotAddPortfolioErrorDescription

	^'Cannot add portfolio'.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:25:02'!
contains: aPortfolio

	portfolios do: [:aChildPortfolio | aChildPortfolio assertCanAddPortfolio: aPortfolio].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:25:37' prior: 50864125!
contains: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].! !

!testRun: #PortfolioTest #test12CannotAddAPortfolioThatContainsItself stamp: 'GRC 10/11/2021 15:27:14'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:27:53' prior: 50864132!
contains: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].
	
	^true.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:27:56' prior: 50864142!
contains: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].
	
	^false.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:28:45' prior: 50864098!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [^self error: Portfolio cannotAddPortfolioErrorDescription].
	
	aPortfolio contains: self.
	
	^true.
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:28:55' prior: 50864149!
contains: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].! !

!testRun: #PortfolioTest #test12CannotAddAPortfolioThatContainsItself stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddPortfolioToItself stamp: 'GRC 10/11/2021 15:29:02'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAPortfolioThatContainsItself stamp: 'GRC 10/11/2021 15:29:03'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:29:18' prior: 50864069!
test12CannotAddAPortfolioThatContainsItself

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:29:29'!
test12CannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test12CannotAddAPortfolioThatContainsItself stamp: 'GRC 10/11/2021 15:29:29'!
test12CannotAddAPortfolioThatContainsItself

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:31:37'!
test01PortfolioStartsWithBalanceOfZero

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test01 stamp: 'GRC 10/11/2021 15:31:37'!
test01

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:32:15'!
test02PortfolioWithEmptyAccountHasBalanceOfZero

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	portfolio addAccount: cuenta.
	
	self assert: 0 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test02 stamp: 'GRC 10/11/2021 15:32:15'!
test02

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	portfolio addAccount: cuenta.
	
	self assert: 0 equals: portfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:33:49'!
test03PortfolioWithOneAccountHasItsAccountBalance

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test03 stamp: 'GRC 10/11/2021 15:33:49'!
test03

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:34:24'!
test04PortfolioWithMultipleAccountsHasSumOfBalances

	| portfolio cuenta1 cuenta2 |
	
	portfolio _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	
	Deposit register: 100 on: cuenta2.
	
	portfolio addAccount: cuenta1.
	
	portfolio addAccount: cuenta2.
	
	self assert: 150 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test04 stamp: 'GRC 10/11/2021 15:34:24'!
test04

	| portfolio cuenta1 cuenta2 |
	
	portfolio _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	
	Deposit register: 100 on: cuenta2.
	
	portfolio addAccount: cuenta1.
	
	portfolio addAccount: cuenta2.
	
	self assert: 150 equals: portfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:35:29'!
test05PortfolioWithPorfolioHasSumOfBalances

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	Deposit register: 100 on: cuenta2.
	
	portfolio1 addAccount: cuenta1.
	portfolio2 addAccount: cuenta2.
	
	portfolio1 addPortfolio: portfolio2. 
	
	self assert: 150 equals: portfolio1 balance.! !

!methodRemoval: PortfolioTest #test05 stamp: 'GRC 10/11/2021 15:35:29'!
test05

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta1.
	Deposit register: 100 on: cuenta2.
	
	portfolio1 addAccount: cuenta1.
	portfolio2 addAccount: cuenta2.
	
	portfolio1 addPortfolio: portfolio2. 
	
	self assert: 150 equals: portfolio1 balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:36:15'!
test06PortfolioStartsWithNoTransactions

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self assert: portfolio1 transactions isEmpty.! !

!methodRemoval: PortfolioTest #test06 stamp: 'GRC 10/11/2021 15:36:15'!
test06

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self assert: portfolio1 transactions isEmpty.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:36:57'!
test07PortfolioHasAccountTansctions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:36:57'!
test07

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:37:09'!
test07PortfolioHasAccountTransctions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test07PortfolioHasAccountTansctions stamp: 'GRC 10/11/2021 15:37:09'!
test07PortfolioHasAccountTansctions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:37:15'!
test07PortfolioHasAccountTransactions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test07PortfolioHasAccountTransctions stamp: 'GRC 10/11/2021 15:37:15'!
test07PortfolioHasAccountTransctions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:38:16'!
test07

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:38:16'!
test07PortfolioHasAccountTransactions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!

!methodRemoval: PortfolioTest #test07 stamp: 'GRC 10/11/2021 15:38:18'!
test07

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:38:24'!
test08PortfolioHasAccountTransactions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	transacciones add: (Deposit register: 100 on: cuenta).
	transacciones add: (Withdraw register: 100 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test08 stamp: 'GRC 10/11/2021 15:38:24'!
test08

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	transacciones add: (Deposit register: 100 on: cuenta).
	transacciones add: (Withdraw register: 100 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:38:40'!
test07PortfolioHasAccountTransactions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	transacciones add: (Deposit register: 100 on: cuenta).
	transacciones add: (Withdraw register: 100 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test08PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:38:40'!
test08PortfolioHasAccountTransactions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	transacciones add: (Deposit register: 100 on: cuenta).
	transacciones add: (Withdraw register: 100 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:38:53'!
test08PortfolioHasAccountsTransactions

	| portfolio1 cuenta1 cuenta2 transacciones |
	
	portfolio1 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio1 addAccount: cuenta1.
	portfolio1 addAccount: cuenta2.
	
	self assert: transacciones equals: portfolio1 transactions.! !

!methodRemoval: PortfolioTest #test09 stamp: 'GRC 10/11/2021 15:38:53'!
test09

	| portfolio1 cuenta1 cuenta2 transacciones |
	
	portfolio1 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio1 addAccount: cuenta1.
	portfolio1 addAccount: cuenta2.
	
	self assert: transacciones equals: portfolio1 transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:39:16'!
test09PortfolioHasPortfoliosTransactions

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio1 addAccount: cuenta1.
	portfolio2 addAccount: cuenta2.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: transacciones equals: portfolio1 transactions.! !

!methodRemoval: PortfolioTest #test10 stamp: 'GRC 10/11/2021 15:39:16'!
test10

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	cuenta1 _ ReceptiveAccount new.
	cuenta2 _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta1).
	transacciones add: (Deposit register: 100 on: cuenta2).
	transacciones add: (Deposit register: 10 on: cuenta2).
	
	portfolio1 addAccount: cuenta1.
	portfolio2 addAccount: cuenta2.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: transacciones equals: portfolio1 transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:39:20'!
test10CannotAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test11CannotAddPortfolioToItself stamp: 'GRC 10/11/2021 15:39:20'!
test11CannotAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:39:25'!
test11CannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test12CannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:39:25'!
test12CannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:39:57'!
test10PortfolioCannotAddItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test10CannotAddPortfolioToItself stamp: 'GRC 10/11/2021 15:39:57'!
test10CannotAddPortfolioToItself

	| portfolio1 |
	
	portfolio1 _ Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:40:37'!
test11PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test11CannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:40:37'!
test11CannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].!
!Behavior method!
initialize
	(accounts _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (14 to: 21)
		declaredAt: (14 to: 21).
	(portfolios _ [
	(OrderedCollection
		cover: (62 to: 78)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{80 to: 82})
		cover: (49 to: 58)
		declaredAt: (49 to: 58).! !
!Behavior method!
balance
	^ [
	([
	(accounts
		cover: (14 to: 21)
		declaredAt: (14 to: 21))
		sum: [ :anAccount |
			[
			(anAccount
				cover: (42 to: 50)
				declaredAt: (30 to: 38)) balance ] valueCoveringAll:
				{52 to: 58} ]
		ifEmpty: [
			0 coverAll:
				{71 to: 71} ]] valueCoveringAll:
		{23 to: 26. 61 to: 68}) +
		([
		(portfolios
			cover: (78 to: 87)
			declaredAt: (78 to: 87))
			sum: [ :aPortfolio |
				[
				(aPortfolio
					cover: (109 to: 118)
					declaredAt: (96 to: 105)) balance ] valueCoveringAll:
					{120 to: 126} ]
			ifEmpty: [
				0 coverAll:
					{139 to: 139} ]] valueCoveringAll:
			{89 to: 92. 129 to: 136}) ] valueCoveringAll:
		{75 to: 75}.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 15:41:51'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
addAccount: aReceptiveAccount
	[
	(accounts
		cover: (35 to: 42)
		declaredAt: (35 to: 42)) add:
		(aReceptiveAccount
			cover: (49 to: 65)
			declaredAt: (13 to: 29)) ] valueCoveringAll:
		{44 to: 47}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		sum: [ :aTransaction |
			[
			(aTransaction
				cover: (48 to: 59)
				declaredAt: (33 to: 44)) balanceDifference ] valueCoveringAll:
				{61 to: 77} ]
		ifEmpty: [
			0 coverAll:
				{92 to: 92} ]] valueCoveringAll:
		{25 to: 28. 81 to: 88}.! !

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 15:41:51'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
balanceDifference
	^ value
		cover: (23 to: 27)
		declaredAt: (23 to: 27).! !

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!
!Behavior method!
addPortfolio: aPortfolio
	[
	(self coverAll:
		{29 to: 32}) assertCanAddPortfolio:
		(aPortfolio
			cover: (57 to: 66)
			declaredAt: (15 to: 24)) ] valueCoveringAll:
		{34 to: 55}.
	[
	(portfolios
		cover: (71 to: 80)
		declaredAt: (71 to: 80)) add:
		(aPortfolio
			cover: (87 to: 96)
			declaredAt: (15 to: 24)) ] valueCoveringAll:
		{82 to: 85}.! !
!Behavior method!
assertCanAddPortfolio: aPortfolio
	[
	([
	(self coverAll:
		{37 to: 40}) =
		(aPortfolio
			cover: (44 to: 53)
			declaredAt: (24 to: 33)) ] valueCoveringAll:
		{42 to: 42}) ifTrue: [ ^ [
		(self coverAll:
			{65 to: 68}) error:
			([
			(Portfolio
				cover: (77 to: 85)
				declaredAt: (77 to: 85)) cannotAddPortfolioErrorDescription ] valueCoveringAll:
				{87 to: 120}) ] valueCoveringAll:
			{70 to: 75} ]] valueCoveringAll:
		{55 to: 61}.
	[
	(aPortfolio
		cover: (127 to: 136)
		declaredAt: (24 to: 33)) contains:
		(self coverAll:
			{148 to: 151}) ] valueCoveringAll:
		{138 to: 146}.
	^ true coverAll:
		{158 to: 161}.! !
!Behavior method!
contains: aPortfolio
	[
	(portfolios
		cover: (24 to: 33)
		declaredAt: (24 to: 33)) do: [ :aChildPortfolio |
		[
		(aPortfolio
			cover: (59 to: 68)
			declaredAt: (11 to: 20)) assertCanAddPortfolio:
			(aChildPortfolio
				cover: (93 to: 107)
				declaredAt: (41 to: 55)) ] valueCoveringAll:
			{70 to: 91} ]] valueCoveringAll:
		{35 to: 37}.! !

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!
!Behavior method!
transactions
	| transactions |
	(transactions _ [
	(OrderedCollection
		cover: (51 to: 67)
		declaredAt: (51 to: 67)) new ] valueCoveringAll:
		{69 to: 71})
		cover: (36 to: 47)
		declaredAt: (18 to: 29).
	[
	(accounts
		cover: (76 to: 83)
		declaredAt: (76 to: 83)) do: [ :anAccount |
		[
		(transactions
			cover: (103 to: 114)
			declaredAt: (18 to: 29)) addAll:
			([
			(anAccount
				cover: (124 to: 132)
				declaredAt: (91 to: 99)) transactions ] valueCoveringAll:
				{134 to: 145}) ] valueCoveringAll:
			{116 to: 122} ]] valueCoveringAll:
		{85 to: 87}.
	[
	(portfolios
		cover: (150 to: 159)
		declaredAt: (150 to: 159)) do: [ :aPortfolio |
		[
		(transactions
			cover: (180 to: 191)
			declaredAt: (18 to: 29)) addAll:
			([
			(aPortfolio
				cover: (201 to: 210)
				declaredAt: (167 to: 176)) transactions ] valueCoveringAll:
				{212 to: 223}) ] valueCoveringAll:
			{193 to: 199} ]] valueCoveringAll:
		{161 to: 163}.
	^ transactions
		cover: (232 to: 243)
		declaredAt: (18 to: 29).! !

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!
!Behavior method!
cannotAddPortfolioErrorDescription
	^ 'Cannot add portfolio' coverAll:
		{39 to: 60}.! !

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:41:52'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:44:49'!
test12PortfolioCannotAddExistingAccount

	| portfolio1 portfolio2 |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	
	portfolio2 addPortfolio: portfolio1.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:46:27' prior: 50864974!
test12PortfolioCannotAddExistingAccount

	| portfolio1 cuenta |
	
	portfolio1 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	
	self should: [portfolio1 addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 15:46:34'!
FAILURE!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:46:51'!
cannotAddExistingAccountErrorDescription

	^'Cannot add existing account'.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:48:14' prior: 50862714!
addAccount: aReceptiveAccount 

	(accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription].
	
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:48:19' prior: 50865013!
addAccount: aReceptiveAccount 

	(accounts includes: aReceptiveAccount) ifTrue: [^self error: Portfolio cannotAddExistingAccountErrorDescription].
	
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 15:48:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 15:48:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 15:48:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 15:48:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 15:48:21'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:48:37' prior: 50865022!
addAccount: aReceptiveAccount 

	(accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription].
	
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 15:48:38'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:48:47' prior: 50864156!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [self error: Portfolio cannotAddPortfolioErrorDescription].
	
	aPortfolio contains: self.
	
	^true.
	
! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 15:48:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 15:48:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 15:48:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 15:48:48'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:50:21'!
test13PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 cuenta |
	
	portfolio1 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	
	self should: [portfolio1 addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:51:02' prior: 50865174!
test13PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio2 addAccount: cuenta.
	portfolio1 addPortfolio: portfolio2.
	
	self should: [portfolio1 addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 15:51:03'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:52:06' prior: 50865073!
addAccount: aReceptiveAccount 

	self assertCanAddAccount: aReceptiveAccount.
	
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:53:57'!
assertCanAddAccount: aReceptiveAccount.
	
	(accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription].
	
	portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 15:55:05'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:55:09' prior: 50865124!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [self error: Portfolio cannotAddPortfolioErrorDescription].
	
	aPortfolio contains: self.
	
! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 15:55:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:56:14'!
test14PortfolioCannotAddPortfolioWithAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio2 addAccount: cuenta.
	portfolio1 addPortfolio: portfolio2.
	
	self should: [portfolio1 addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 15:58:39'!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	portfolio2 addAccount: cuenta.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddPortfolioWithAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 15:58:49'!
test14PortfolioCannotAddPortfolioWithAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio2 addAccount: cuenta.
	portfolio1 addPortfolio: portfolio2.
	
	self should: [portfolio1 addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 15:59:07'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:02:16' prior: 50865274!
assertCanAddPortfolio: aPortfolio

	self = aPortfolio ifTrue: [self error: Portfolio cannotAddPortfolioErrorDescription].
	
	accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount].
	
	aPortfolio contains: self.
	
! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 16:02:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:02:19'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:02:19'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:03:11' prior: 50865345!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	portfolio2 addAccount: cuenta.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:03:26'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:04:48' prior: 50865448!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	portfolio3 addAccount: cuenta.
	
	portfolio2 addPortfolio: portfolio3.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:04:49'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:12:29'!
test15PortfolioStartsWithNoRegisteredTransactions

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	self deny: (portfolio hasRegistered: transaccion).! !

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/11/2021 16:12:31'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:12:38'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:12:45' prior: 50865607!
hasRegistered: aDeposit 
	
	^false.! !

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/11/2021 16:12:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:13:32'!
test16PortfolioHasAccountTransactionRegistered

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: (portfolio hasRegistered: transaccion).! !

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionRegistered stamp: 'GRC 10/11/2021 16:13:37'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:14:32' prior: 50865612!
hasRegistered: aTransaction
	
	^self transactions includes: aTransaction.! !

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionRegistered stamp: 'GRC 10/11/2021 16:14:34'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 16:14:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 16:14:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 16:14:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 16:14:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 16:14:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 16:14:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionRegistered stamp: 'GRC 10/11/2021 16:14:35'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:17:10'!
test16PortfolioHasPortfoliosTransactionRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio1 addAccount: cuenta.
	
	self assert: (portfolio1 hasRegistered: transaccion).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:18:02' prior: 50865755!
test16PortfolioHasPortfoliosTransactionRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio1 addAccount: cuenta.
	
	self assert: (portfolio1 hasRegistered: transaccion).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:18:44' prior: 50865768!
test16PortfolioHasPortfoliosTransactionRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio3 addAccount: cuenta.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio1.
	
	self assert: (portfolio1 hasRegistered: transaccion).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:19:00'!
test17PortfolioHasPortfoliosTransactionRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio3 addAccount: cuenta.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio1.
	
	self assert: (portfolio1 hasRegistered: transaccion).! !

!methodRemoval: PortfolioTest #test16PortfolioHasPortfoliosTransactionRegistered stamp: 'GRC 10/11/2021 16:19:02'!
test16PortfolioHasPortfoliosTransactionRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio3 addAccount: cuenta.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio1.
	
	self assert: (portfolio1 hasRegistered: transaccion).!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionRegistered stamp: 'GRC 10/11/2021 16:19:06'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:19:21' prior: 50865800!
test17PortfolioHasPortfoliosTransactionRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio3 addAccount: cuenta.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 hasRegistered: transaccion).! !

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionRegistered stamp: 'GRC 10/11/2021 16:19:22'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/11/2021 16:19:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/11/2021 16:19:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionRegistered stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionRegistered stamp: 'GRC 10/11/2021 16:19:23'!
PASSED!

----SNAPSHOT----(11 October 2021 16:19:44) CuisUniversity-4532.image priorSource: 17019321!

----STARTUP---- (11 October 2021 16:21:57) as C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\CuisUniversity-4532.image!


----SNAPSHOT----(11 October 2021 16:22:13) CuisUniversity-4532.image priorSource: 17096621!

----STARTUP---- (11 October 2021 16:25:40) as C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:27:56'!
test17PortfolioHasPortfoliosTransactionsRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio3 addAccount: cuenta.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 hasRegistered: transaccion).! !

!methodRemoval: PortfolioTest #test17PortfolioHasPortfoliosTransactionRegistered stamp: 'GRC 10/11/2021 16:27:57'!
test17PortfolioHasPortfoliosTransactionRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio3 addAccount: cuenta.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 hasRegistered: transaccion).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GRC 10/11/2021 16:28:10'!
test16PortfolioHasAccountTransactionsRegistered

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: (portfolio hasRegistered: transaccion).! !

!methodRemoval: PortfolioTest #test16PortfolioHasAccountTransactionRegistered stamp: 'GRC 10/11/2021 16:28:10'!
test16PortfolioHasAccountTransactionRegistered

	| portfolio cuenta transaccion |
	
	portfolio _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	transaccion _ Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: (portfolio hasRegistered: transaccion).!

----SNAPSHOT----(11 October 2021 16:28:27) CuisUniversity-4532.image priorSource: 17096882!

----SNAPSHOT----(11 October 2021 16:51:29) CuisUniversity-4532.image priorSource: 17099051!

----STARTUP---- (14 October 2021 20:15:36) as C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\CuisUniversity-4532.image!

!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/14/2021 21:19:07'!
accountsBalance

	^ accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/14/2021 21:19:07' prior: 50863060!
balance
	
	^(self accountsBalance) + (portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/14/2021 21:19:22'!
portfoliosBalance

	^ portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/14/2021 21:19:22' prior: 50866013!
balance
	
	^(self accountsBalance) + (self portfoliosBalance).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/14/2021 21:21:03' prior: 50866025!
balance
	
	^self accountsBalance + self portfoliosBalance.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GRC 10/14/2021 21:24:32' prior: 50859603!
balance

	| balance |

	balance _ 0.

	transactions do: [ :aTransaction | aTransaction addToBalance: balance ].
	
	^balance.! !
!Deposit methodsFor: 'value' stamp: 'GRC 10/14/2021 21:25:46'!
addToBalance: aBalance

	aBalance + self value.! !
!Withdraw methodsFor: 'value' stamp: 'GRC 10/14/2021 21:26:05'!
addToBalance: aBalance

	aBalance - self value.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/14/2021 21:26:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/14/2021 21:26:14'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/14/2021 21:26:14'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/14/2021 21:26:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/14/2021 21:26:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/14/2021 21:26:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/14/2021 21:26:14'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'GRC 10/14/2021 21:27:00' prior: 50866036!
balance

	| balance |

	balance _ 0.

	transactions do: [ :aTransaction | aTransaction addToBalance: balance ].
	
	^balance.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GRC 10/14/2021 21:31:57' prior: 50866078!
balance

	^transactions inject: 0 into: [ :totalBalance :aTransaction | aTransaction addToBalance: totalBalance ].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/14/2021 21:32:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/14/2021 21:32:49'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/14/2021 21:32:49'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/14/2021 21:32:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/14/2021 21:32:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/14/2021 21:32:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/14/2021 21:32:49'!
PASSED!
!Withdraw methodsFor: 'value' stamp: 'GRC 10/14/2021 21:33:39' prior: 50866046!
addToBalance: aBalance

	^aBalance - value.! !

!methodRemoval: Withdraw #balanceDifference stamp: 'GRC 10/14/2021 21:33:48'!
balanceDifference

	^ value withNegativeSign.!
!Deposit methodsFor: 'value' stamp: 'GRC 10/14/2021 21:33:58' prior: 50866042!
addToBalance: aBalance

	^aBalance + value.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/14/2021 21:34:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/14/2021 21:34:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/14/2021 21:34:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/14/2021 21:34:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/14/2021 21:34:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/14/2021 21:34:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/14/2021 21:34:04'!
PASSED!

!methodRemoval: Deposit #balanceDifference stamp: 'GRC 10/14/2021 21:34:15'!
balanceDifference

	^ value!

!methodRemoval: PortfolioTest #test02PortfolioWithEmptyAccountHasBalanceOfZero stamp: 'GRC 10/14/2021 21:36:09'!
test02PortfolioWithEmptyAccountHasBalanceOfZero

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	portfolio addAccount: cuenta.
	
	self assert: 0 equals: portfolio balance.!

!methodRemoval: PortfolioTest #test03PortfolioWithOneAccountHasItsAccountBalance stamp: 'GRC 10/14/2021 21:37:02'!
test03PortfolioWithOneAccountHasItsAccountBalance

	| portfolio cuenta |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	Deposit register: 50 on: cuenta.
	
	portfolio addAccount: cuenta.
	
	self assert: 50 equals: portfolio balance.!

!methodRemoval: PortfolioTest #test07PortfolioHasAccountTransactions stamp: 'GRC 10/14/2021 21:37:15'!
test07PortfolioHasAccountTransactions

	| portfolio cuenta transacciones |
	
	portfolio _ Portfolio new.
	
	cuenta _ ReceptiveAccount new.
	
	transacciones _ OrderedCollection new. 
	
	transacciones add: (Deposit register: 50 on: cuenta).
	transacciones add: (Deposit register: 100 on: cuenta).
	transacciones add: (Withdraw register: 100 on: cuenta).
	
	portfolio addAccount: cuenta.
	
	self assert: transacciones equals: portfolio transactions.!

----QUIT----(14 October 2021 21:42:15) CuisUniversity-4532.image priorSource: 17099144!

----STARTUP---- (15 October 2021 10:12:14) as C:\Users\Guido\Desktop\Facultad\Cs. Computación\Ing. Software 1\Ejercicios\17 - Portfolio 1\CuisUniversity-4532.image!


----QUIT----(15 October 2021 10:12:39) CuisUniversity-4532.image priorSource: 17105553!

----STARTUP---- (15 October 2021 14:10:57) as /home/ryan/UBA/Ing1/cuis2/CuisUniversity-4913.image!


----End fileIn of /home/ryan/UBA/Ing1/cuis2/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 14:11:52'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 14:11:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'RI 10/15/2021 14:11:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'RI 10/15/2021 14:11:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'RI 10/15/2021 14:11:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'RI 10/15/2021 14:11:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'RI 10/15/2021 14:11:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'RI 10/15/2021 14:11:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'RI 10/15/2021 14:11:57'!
PASSED!

OrderedCollection!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:18:19' prior: 50915002!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	portfolio3 addAccount: cuenta.
	
	portfolio2 addPortfolio: portfolio3.
	
	"self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText]."
	
	[portfolio1 addPortfolio: portfolio2]
		on: Error
		do: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 14:18:20'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 14:18:20'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:18:52' prior: 50915487!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	portfolio3 addAccount: cuenta.
	
	portfolio2 addPortfolio: portfolio3.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:19:48' prior: 50915565!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	cuenta _ ReceptiveAccount new.
	
	portfolio1 addAccount: cuenta.
	portfolio3 addAccount: cuenta.
	
	portfolio2 addPortfolio: portfolio3.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:32:55' prior: 50915286!
assertCanAddAccount: aReceptiveAccount.
	
	(accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription].
	
	portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:33:07'!
assertPortfolioDoesNotIncludesAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:33:07' prior: 50915605!
assertCanAddAccount: aReceptiveAccount.
	
	self assertPortfolioDoesNotIncludesAccount: aReceptiveAccount.
	
	portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:33:44'!
assertPortfolioDoesNotIncludeAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:33:44' prior: 50915625!
assertCanAddAccount: aReceptiveAccount.
	
	self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	
	portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount].! !

!methodRemoval: Portfolio #assertPortfolioDoesNotIncludesAccount: stamp: 'RI 10/15/2021 14:33:44'!
assertPortfolioDoesNotIncludesAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription]!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 14:33:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 14:33:49'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:35:27' prior: 50915643!
assertCanAddAccount: aReceptiveAccount.
	
	self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	
	portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:35:43'!
assertChildPortfoliosCanAddAccount: aReceptiveAccount

	^ portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:35:43' prior: 50915711!
assertCanAddAccount: aReceptiveAccount.
	
	self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:35:49' prior: 50915728!
assertCanAddAccount: aReceptiveAccount.
	
	self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:36:56'!
assertPortfolioIsNotEqualTo: aPortfolio

	^ self = aPortfolio ifTrue: [self error: Portfolio cannotAddPortfolioErrorDescription]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:36:56' prior: 50915297!
assertCanAddPortfolio: aPortfolio

	self assertPortfolioIsNotEqualTo: aPortfolio.
	
	accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount].
	
	aPortfolio contains: self.
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:37:55'!
assertPorfolioAccountsCanBeAddedTo: aPortfolio

	^ accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:37:55' prior: 50915753!
assertCanAddPortfolio: aPortfolio

	self assertPortfolioIsNotEqualTo: aPortfolio.
	
	self assertPorfolioAccountsCanBeAddedTo: aPortfolio.
	
	aPortfolio contains: self.
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:38:23' prior: 50915769!
assertCanAddPortfolio: aPortfolio

	self assertPortfolioIsNotEqualTo: aPortfolio.
	self assertPorfolioAccountsCanBeAddedTo: aPortfolio.
	
	aPortfolio contains: self.
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:44:08'!
assertPortfolioAccountsCanBeAddedTo: aPortfolio

	^ accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:44:08' prior: 50915778!
assertCanAddPortfolio: aPortfolio

	self assertPortfolioIsNotEqualTo: aPortfolio.
	self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
	
	aPortfolio contains: self.
	
! !

!methodRemoval: Portfolio #assertPorfolioAccountsCanBeAddedTo: stamp: 'RI 10/15/2021 14:44:08'!
assertPorfolioAccountsCanBeAddedTo: aPortfolio

	^ accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:44:41'!
assertChildPortfoliosCanBeAddedTo: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:44:41' prior: 50915793!
assertCanAddPortfolio: aPortfolio

	self assertPortfolioIsNotEqualTo: aPortfolio.
	self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
	
	aPortfolio assertChildPortfoliosCanBeAddedTo: self.
	
! !

!methodRemoval: Portfolio #contains: stamp: 'RI 10/15/2021 14:44:41'!
contains: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:45:46' prior: 50915816!
assertCanAddPortfolio: aPortfolio

	self assertPortfolioIsNotEqualTo: aPortfolio.
	self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
	aPortfolio assertChildPortfoliosCanBeAddedTo: self.
	
! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 14:45:50'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'RI 10/15/2021 14:49:57'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:51:21' prior: 50915336!
transactions
	
	^ true.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'RI 10/15/2021 14:51:30'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:51:37' prior: 50915908!
transactions
	
	^ transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:51:50' prior: 50915324 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.	
	transactions _ OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:52:12' prior: 50915273!
addAccount: aReceptiveAccount 

	self assertCanAddAccount: aReceptiveAccount.
	
	accounts add: aReceptiveAccount.
	transactions addAll: aReceptiveAccount transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:52:24' prior: 50915280!
addPortfolio: aPortfolio 

	self assertCanAddPortfolio: aPortfolio.

	portfolios add: aPortfolio.
	transactions addAll: aPortfolio transactions.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 14:52:52'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'RI 10/15/2021 14:55:12'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:55:30' prior: 50915926!
transactions
	
	| transactions |
	
	transactions _ OrderedCollection new.

	accounts do: [:anAccount | transactions addAll: anAccount transactions].
	portfolios do: [:aPortfolio | transactions addAll: aPortfolio transactions].
	
	^ transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:55:34' prior: 50915938!
addAccount: aReceptiveAccount 

	self assertCanAddAccount: aReceptiveAccount.
	
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:55:38' prior: 50915947!
addPortfolio: aPortfolio 

	self assertCanAddPortfolio: aPortfolio.

	portfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 14:56:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 14:56:35'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 14:57:39' prior: 50916017!
transactions
	
	| transactions |
	
	transactions _ OrderedCollection new.

	accounts do: [:anAccount | transactions addAll: anAccount transactions].
	portfolios do: [:aPortfolio | transactions addAll: aPortfolio transactions].
	
	^ transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:07:36' prior: 50914863!
test04PortfolioWithMultipleAccountsHasSumOfBalances

	| portfolio cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio _ self createPorfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
	
	self assert: 150 equals: portfolio balance.! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:07:39'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:07:48'!
createAccountWithDepositAmounts: anArray andWithdrawalAmounts: anArray2 
	self shouldBeImplemented.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:10:43' prior: 50916121!
createAccountWithDepositAmounts: aDepositAmountsList andWithdrawalAmounts: aWithdrawalAmountsList 
	
	| account |
	account _ ReceptiveAccount new.
	
	aDepositAmountsList do: [:anAmount | Deposit register: anAmount on: account ].
	aWithdrawalAmountsList do: [:anAmount | Withdraw register: anAmount on: account ].
	
	^account.! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:10:45'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:10:52'!
createPorfolioWithAccounts: anArray andPortfolios: anArray2 
	self shouldBeImplemented.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:12:49' prior: 50916145!
createPorfolioWithAccounts: anAccountsList andPortfolios: aPortfoliosList 
	
	| portfolio |
	portfolio _ Portfolio new.
	
	anAccountsList do: [:anAccount | portfolio addAccount: anAccount ].
	aPortfoliosList do: [:aPortfolio| portfolio addPortfolio: aPortfolio ].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:12:57' prior: 50916151!
createPorfolioWithAccounts: anAccountsList andPortfolios: aPortfoliosList 
	
	| portfolio |
	portfolio _ Portfolio new.
	
	anAccountsList do: [:anAccount | portfolio addAccount: anAccount ].
	aPortfoliosList do: [:aPortfolio| portfolio addPortfolio: aPortfolio ].
	
	^portfolio.! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:13:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:13:01'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:13:31' prior: 50916102!
test04PortfolioWithMultipleAccountsHasSumOfBalances

	| portfolio cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio _ self createPorfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
	
	self assert: 150 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:13:43' prior: 50914856!
test01PortfolioStartsWithBalanceOfZero

	| portfolio |
	
	portfolio _ self createPorfolioWithAccounts: {} andPortfolios: {}.
	
	self assert: 0 equals: portfolio balance.! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:13:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:13:53'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:15:15' prior: 50914878!
test05PortfolioWithPorfolioHasSumOfBalances

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio2 _ self createPorfolioWithAccounts: {cuenta2} andPortfolios: {}.
	portfolio1 _ self createPorfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: 150 equals: portfolio1 balance.! !

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:15:16'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:15:16'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:15:43' prior: 50914895!
test06PortfolioStartsWithNoTransactions

	| portfolio |
	
	portfolio _ self createPorfolioWithAccounts: {} andPortfolios: {}.
	
	self assert: portfolio transactions isEmpty.! !

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:15:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:15:44'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:18:28' prior: 50914902!
test08PortfolioHasAccountsTransactions

	| portfolio1 cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio1 _ self createPorfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
		
	self assert: transacciones equals: portfolio1 transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:18:31' prior: 50916439!
test08PortfolioHasAccountsTransactions

	| portfolio cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio _ self createPorfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
		
	self assert: transacciones equals: portfolio transactions.! !

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:18:38'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:18:38'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:20:24' prior: 50914922!
test09PortfolioHasPortfoliosTransactions

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio2 _ self createPorfolioWithAccounts: {cuenta2} andPortfolios: {}. 
	portfolio1 _ self createPorfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: transacciones equals: portfolio1 transactions.! !

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:20:27'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:20:27'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:21:11' prior: 50914944!
test10PortfolioCannotAddItself

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self should: [portfolio addPortfolio: portfolio] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:21:22' prior: 50916608!
test10PortfolioCannotAddItself

	| portfolio |
	
	portfolio _ self createPorfolioWithAccounts: {} andPortfolios: {}.
	
	self should: [portfolio addPortfolio: portfolio] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:21:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:21:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:22:05' prior: 50914956!
test11PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ self createPorfolioWithAccounts: {} andPortfolios: {}.
	portfolio2 _ self createPorfolioWithAccounts: {} andPortfolios: {portfolio1}.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:22:06'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:22:06'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:23:09' prior: 50914971!
test12PortfolioCannotAddExistingAccount

	| portfolio cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio _ self createPorfolioWithAccounts: {cuenta} andPortfolios: {}.
		
	self should: [portfolio addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:23:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:23:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:24:52' prior: 50914985!
test13PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio2 _ self createPorfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio1 _ self createPorfolioWithAccounts: {} andPortfolios: {portfolio2 }.
	
	self should: [portfolio1 addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:25:12'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:25:12'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:27:03' prior: 50915585!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio3 _ self createPorfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPorfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPorfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:27:04'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:27:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:28:25' prior: 50915021!
test15PortfolioStartsWithNoRegisteredTransactions

	| portfolio cuenta transaccion |
	
	portfolio _ self createPorfolioWithAccounts: {} andPortfolios: {}.
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	
	transaccion _ cuenta transactions first.
	
	self deny: (portfolio hasRegistered: transaccion).! !

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:28:27'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:28:27'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:28:53' prior: 50915032!
test16PortfolioHasAccountTransactionsRegistered

	| portfolio cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio _ self createPorfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	transaccion _ cuenta transactions first.
	
	self assert: (portfolio hasRegistered: transaccion).! !

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:28:54'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:28:54'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:30:39' prior: 50915044!
test17PortfolioHasPortfoliosTransactionsRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio3 _ self createPorfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPorfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPorfolioWithAccounts: {} andPortfolios: {portfolio2}.
	
	transaccion _ cuenta transactions first .
	
	self assert: (portfolio1 hasRegistered: transaccion).! !

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:30:40'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:30:40'!
PASSED!
!PortfolioTest methodsFor: 'creation' stamp: 'RI 10/15/2021 15:32:03'!
createPortfolioWithAccounts: anAccountsList andPortfolios: aPortfoliosList 
	
	| portfolio |
	portfolio _ Portfolio new.
	
	anAccountsList do: [:anAccount | portfolio addAccount: anAccount ].
	aPortfoliosList do: [:aPortfolio| portfolio addPortfolio: aPortfolio ].
	
	^portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916974!
test15PortfolioStartsWithNoRegisteredTransactions

	| portfolio cuenta transaccion |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	
	transaccion _ cuenta transactions first.
	
	self deny: (portfolio hasRegistered: transaccion).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916459!
test08PortfolioHasAccountsTransactions

	| portfolio cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio _ self createPortfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
		
	self assert: transacciones equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916532!
test09PortfolioHasPortfoliosTransactions

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}. 
	portfolio1 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: transacciones equals: portfolio1 transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916244!
test01PortfolioStartsWithBalanceOfZero

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916898!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50917041!
test16PortfolioHasAccountTransactionsRegistered

	| portfolio cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	transaccion _ cuenta transactions first.
	
	self assert: (portfolio hasRegistered: transaccion).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916229!
test04PortfolioWithMultipleAccountsHasSumOfBalances

	| portfolio cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
	
	self assert: 150 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916377!
test06PortfolioStartsWithNoTransactions

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self assert: portfolio transactions isEmpty.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916686!
test11PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio1}.
	
	self should: [portfolio1 addPortfolio: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916825!
test13PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2 }.
	
	self should: [portfolio1 addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50916620!
test10PortfolioCannotAddItself

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self should: [portfolio addPortfolio: portfolio] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:03' prior: 50917108!
test17PortfolioHasPortfoliosTransactionsRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2}.
	
	transaccion _ cuenta transactions first .
	
	self assert: (portfolio1 hasRegistered: transaccion).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:04' prior: 50916306!
test05PortfolioWithPorfolioHasSumOfBalances

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: 150 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'RI 10/15/2021 15:32:04' prior: 50916756!
test12PortfolioCannotAddExistingAccount

	| portfolio cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
		
	self should: [portfolio addAccount: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #createPorfolioWithAccounts:andPortfolios: stamp: 'RI 10/15/2021 15:32:04'!
createPorfolioWithAccounts: anAccountsList andPortfolios: aPortfoliosList 
	
	| portfolio |
	portfolio _ Portfolio new.
	
	anAccountsList do: [:anAccount | portfolio addAccount: anAccount ].
	aPortfoliosList do: [:aPortfolio| portfolio addPortfolio: aPortfolio ].
	
	^portfolio.!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'RI 10/15/2021 15:32:17'!
PASSED!

----STARTUP---- (15 October 2021 16:41:38) as C:\Users\Guido\Desktop\17 - Portfolio1\CuisUniversity-4913.image!


----End fileIn of \Users\Guido\Desktop\17 - Portfolio1\Portfolio-Ejercicio.st----!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 16:44:58'!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	
	
	! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 16:45:41' prior: 50915479!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	
	
	! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 16:46:29' prior: 50915499!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	
	self should: [portfolio3 addPortfolio: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].
	! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:46:41'!
FAILURE!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:46:41'!
FAILURE!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:47:14'!
FAILURE!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:47:33'!
FAILURE!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:47:33'!
FAILURE!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:48:28'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 16:48:42' prior: 50915521!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	
	self should: [portfolio3 addPortfolio: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: True].
	! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:48:45'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 16:52:09' prior: 50915570!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	portfolio3 addPortfolio: portfolio4.
	! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:52:13'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 16:53:06' prior: 50915599!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	portfolio3 addPortfolio: portfolio4.
	! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 16:57:32' prior: 50915679!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	portfolio3 addPortfolio: portfolio4.
	
	self assert: 250 equals: portfolio2 balance.
	! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 16:57:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 16:57:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 16:57:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 16:57:36'!
PASSED!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 16:57:36'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 17:00:14' prior: 50915702!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	portfolio3 addPortfolio: portfolio4.
	
	self assert: 250 equals: portfolio2 balance.! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:03:16'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 17:07:36' prior: 50915783!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 addPortfolio: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:07:45'!
FAILURE!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:08:25'!
FAILURE!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:09:05'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/15/2021 17:15:40'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:15:33' prior: 50915344!
assertPortfolioAccountsCanBeAddedTo: aPortfolio
	parents do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
	
	accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount]! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:16:13'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'GRC 10/15/2021 17:16:57' prior: 50915367 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.	
	parents _ OrderedCollection new.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/15/2021 17:17:14'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 17:17:14' prior: 50915910!
assertPortfolioAccountsCanBeAddedTo: aPortfolio
	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
	
	accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 17:17:14' prior: 50915924 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.	
	parentPortfolios _ OrderedCollection new.! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:18:39' prior: 50915940!
assertPortfolioAccountsCanBeAddedTo: aPortfolio
	
	accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount]! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:19:05' prior: 50915321!
assertCanAddPortfolio: aPortfolio
	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
	
	self assertPortfolioIsNotEqualTo: aPortfolio.
	self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
	aPortfolio assertChildPortfoliosCanBeAddedTo: self.
	
! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:19:37' prior: 50915395!
addPortfolio: aPortfolio 

	self assertCanAddPortfolio: aPortfolio.

	portfolios add: aPortfolio.
	
	aPortfolio addParent: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:20:15'!
addParent: aPortfolio 
	parentPortfolios add: aPortfolio.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:20:28' prior: 50915977!
addPortfolio: aPortfolio

	self assertCanAddPortfolio: aPortfolio.
	
	portfolios add: aPortfolio.
	
	aPortfolio addParent: self.! !

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!

!testRun: #PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:20:34'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 17:21:13'!
test19AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 addPortfolio: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 17:21:29'!
test18AddPortfolioWithExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 addPortfolio: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test18AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:21:29'!
test18AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 addPortfolio: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 17:22:01' prior: 50916053!
test19AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	self should: [portfolio3 addAccount: cuenta2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:22:08'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:23:19' prior: 50915389!
addAccount: aReceptiveAccount 

	self assertCanAddAccount: aReceptiveAccount.
	
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:24:02' prior: 50916165!
addAccount: aReceptiveAccount 

	parentPortfolios assertCanAddAccount: aReceptiveAccount.

	self assertCanAddAccount: aReceptiveAccount.
	
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:24:28' prior: 50916172!
addAccount: aReceptiveAccount 

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddAccount: aReceptiveAccount].

	self assertCanAddAccount: aReceptiveAccount.
	
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:24:54'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:25:34' prior: 50915965!
assertCanAddPortfolio: aPortfolio
	
	self assertPortfolioIsNotEqualTo: aPortfolio.
	self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
	aPortfolio assertChildPortfoliosCanBeAddedTo: self.
	
! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:25:45' prior: 50915989!
addPortfolio: aPortfolio

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].

	self assertCanAddPortfolio: aPortfolio.
	
	portfolios add: aPortfolio.
	
	aPortfolio addParent: self.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:25:53'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:27:54' prior: 50916261!
addPortfolio: aPortfolio

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].

	"self assertCanAddPortfolio: aPortfolio."
	
	portfolios add: aPortfolio.
	
	aPortfolio addParent: self.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:27:56'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:27:56'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:27:56'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:28:12' prior: 50916328!
addPortfolio: aPortfolio

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].

	self assertCanAddPortfolio: aPortfolio.
	
	portfolios add: aPortfolio.
	
	aPortfolio addParent: self.! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:29:55' prior: 50915313!
assertCanAddAccount: aReceptiveAccount.

	self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:37:25' prior: 50916396!
addPortfolio: aPortfolio

	self assertCanAddPortfolio: aPortfolio.
	
	portfolios add: aPortfolio.
	
	aPortfolio addParent: self.! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:38:00' prior: 50916252!
assertCanAddPortfolio: aPortfolio

	parentPortfolios ifEmpty: [^self assertCanAddPortfolio: aPortfolio].

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
	
	"self assertPortfolioIsNotEqualTo: aPortfolio.
	self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
	aPortfolio assertChildPortfoliosCanBeAddedTo: self."
	
! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:39:09' prior: 50916421!
assertCanAddPortfolio: aPortfolio

	parentPortfolios ifEmpty: [
		self assertPortfolioIsNotEqualTo: aPortfolio.
		self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
		aPortfolio assertChildPortfoliosCanBeAddedTo: self.
	].

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:39:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:39:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:39:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:39:32'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:39:32'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:39:32'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:39:32'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 17:40:09' prior: 50916414!
addPortfolio: aPortfolio

	self assertCanAddPortfolio: aPortfolio.
	portfolios add: aPortfolio.
	aPortfolio addParent: self.! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:42:50'!
assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio

	self assertPortfolioIsNotEqualTo: aPortfolio.
		self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
		aPortfolio assertChildPortfoliosCanBeAddedTo: self! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:42:50' prior: 50916436!
assertCanAddPortfolio: aPortfolio

	parentPortfolios ifEmpty: [
		self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.
	].

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:43:09' prior: 50916523!
assertCanAddPortfolio: aPortfolio

	parentPortfolios ifEmpty: (self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio).

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:45:01' prior: 50916513!
assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio

	parentPortfolios ifEmpty: [
		self assertPortfolioIsNotEqualTo: aPortfolio.
		self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
		aPortfolio assertChildPortfoliosCanBeAddedTo: self
	]! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:45:14' prior: 50916534!
assertCanAddPortfolio: aPortfolio

	self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:45:17'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:45:38' prior: 50916555!
assertCanAddPortfolio: aPortfolio

	self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.
	
	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio].
! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:45:57'!
assertCanAddPortfolioToPortfolioWithParents: aPortfolio

	^ parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio]! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:45:57' prior: 50916622!
assertCanAddPortfolio: aPortfolio

	self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.
	
	self assertCanAddPortfolioToPortfolioWithParents: aPortfolio.
! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 17:46:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 17:46:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 17:46:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 17:46:01'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:46:06' prior: 50916639!
assertCanAddPortfolio: aPortfolio

	self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.
	self assertCanAddPortfolioToPortfolioWithParents: aPortfolio.
! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:48:28' prior: 50915337!
assertChildPortfoliosCanBeAddedTo: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:49:28' prior: 50916631!
assertCanAddPortfolioToPortfolioWithParents: aPortfolio

	^parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio]! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:49:57' prior: 50916406!
assertCanAddAccount: aReceptiveAccount.

	self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount.! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 17:50:50' prior: 50915330!
assertChildPortfoliosCanAddAccount: aReceptiveAccount

	^ portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount]! !

----SNAPSHOT----(15 October 2021 17:58:12) CuisUniversity-4913.image priorSource: 18661997!

----SNAPSHOT----(15 October 2021 17:59:30) CuisUniversity-4913.image priorSource: 18722957!

Object subclass: #FinancialService
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialService category: 'Portfolio-Ejercicio' stamp: 'GRC 10/15/2021 18:02:06'!
Object subclass: #FinancialService
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialService subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/15/2021 18:02:20'!
FinancialService subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialService subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GRC 10/15/2021 18:02:38'!
FinancialService subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:04:24'!
add: aFinancialService

	! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:05:13' prior: 50916789!
add: aFinancialService

	aFinancialService addTo: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:05:41'!
addTo: aFinancialService

	! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:05:58' prior: 50916797!
addTo: aFinancialService

	aFinancialService addPortfolio: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:07:50' prior: 50916801!
addTo: aPortfolio

	aPortfolio addPortfolio: self.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'GRC 10/15/2021 18:10:16'!
addTo: aPortfolio

	aPortfolio addAccount: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:12:18' prior: 50916506!
addPortfolio: aPortfolio

	self assertCanAddPortfolio: aPortfolio.
	portfolios add: aPortfolio.
	aPortfolio addParent: self.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/15/2021 18:13:53'!
FinancialService subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios financialServices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 18:13:51' prior: 50916705!
assertCanAddPortfolio: aPortfolio

	financialServices do: [].

	"self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.
	self assertCanAddPortfolioToPortfolioWithParents: aPortfolio."
! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 18:20:02' prior: 50916832!
assertCanAddPortfolio: aPortfolio

	self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.
	self assertCanAddPortfolioToPortfolioWithParents: aPortfolio.
! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:21:25' prior: 50915984!
addParent: aPortfolio 

	parentPortfolios add: aPortfolio.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:23:34' prior: 50916793!
add: aFinancialService

	self assertCanAddFinancialService: aFinancialService.

	aFinancialService addTo: self.! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 18:24:11'!
assertCanFinancialService: aFinancialService

	

	"self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount."! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 18:26:07' prior: 50916860!
assertCanFinancialService: aFinancialService

	(financialServices includes: aFinancialService) ifTrue: [].

	"self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount."! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 18:26:37' prior: 50916869!
assertCanFinancialService: aFinancialService

	(financialServices includes: aFinancialService) ifTrue: [self error: Error].

	"self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount."! !

!methodRemoval: Portfolio #assertCanAddAccount: stamp: 'GRC 10/15/2021 18:30:40'!
assertCanAddAccount: aReceptiveAccount.

	self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount.!

!methodRemoval: Portfolio #assertCanAddPortfolio: stamp: 'GRC 10/15/2021 18:30:44'!
assertCanAddPortfolio: aPortfolio

	self assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio.
	self assertCanAddPortfolioToPortfolioWithParents: aPortfolio.
!

!methodRemoval: Portfolio #assertCanAddPortfolioToPortfolioWithParents: stamp: 'GRC 10/15/2021 18:30:47'!
assertCanAddPortfolioToPortfolioWithParents: aPortfolio

	^parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddPortfolio: aPortfolio]!

!methodRemoval: Portfolio #assertCanAddPortfolioToPortfolioWithoutParents: stamp: 'GRC 10/15/2021 18:30:49'!
assertCanAddPortfolioToPortfolioWithoutParents: aPortfolio

	parentPortfolios ifEmpty: [
		self assertPortfolioIsNotEqualTo: aPortfolio.
		self assertPortfolioAccountsCanBeAddedTo: aPortfolio.
		aPortfolio assertChildPortfoliosCanBeAddedTo: self
	]!

!methodRemoval: Portfolio #assertCanFinancialService: stamp: 'GRC 10/15/2021 18:30:50'!
assertCanFinancialService: aFinancialService

	(financialServices includes: aFinancialService) ifTrue: [self error: Error].

	"self assertPortfolioDoesNotIncludeAccount: aReceptiveAccount.
	self assertChildPortfoliosCanAddAccount: aReceptiveAccount."!

!methodRemoval: Portfolio #assertChildPortfoliosCanAddAccount: stamp: 'GRC 10/15/2021 18:30:51'!
assertChildPortfoliosCanAddAccount: aReceptiveAccount

	^ portfolios do: [:aPortfolio | aPortfolio assertCanAddAccount: aReceptiveAccount]!

!methodRemoval: Portfolio #assertChildPortfoliosCanBeAddedTo: stamp: 'GRC 10/15/2021 18:30:52'!
assertChildPortfoliosCanBeAddedTo: aPortfolio

	portfolios do: [:aChildPortfolio | aPortfolio assertCanAddPortfolio: aChildPortfolio].!

!methodRemoval: Portfolio #assertPortfolioAccountsCanBeAddedTo: stamp: 'GRC 10/15/2021 18:30:54'!
assertPortfolioAccountsCanBeAddedTo: aPortfolio
	
	accounts do: [:anAccount | aPortfolio assertCanAddAccount: anAccount]!

!methodRemoval: Portfolio #assertPortfolioDoesNotIncludeAccount: stamp: 'GRC 10/15/2021 18:30:55'!
assertPortfolioDoesNotIncludeAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) ifTrue: [self error: Portfolio cannotAddExistingAccountErrorDescription]!

!methodRemoval: Portfolio #assertPortfolioIsNotEqualTo: stamp: 'GRC 10/15/2021 18:30:56'!
assertPortfolioIsNotEqualTo: aPortfolio

	^ self = aPortfolio ifTrue: [self error: Portfolio cannotAddPortfolioErrorDescription]!

!methodRemoval: Portfolio #addAccount: stamp: 'GRC 10/15/2021 18:31:12'!
addAccount: aReceptiveAccount 

	parentPortfolios do: [:aParentPortfolio | aParentPortfolio assertCanAddAccount: aReceptiveAccount].

	self assertCanAddAccount: aReceptiveAccount.
	
	accounts add: aReceptiveAccount.!

!methodRemoval: Portfolio #addParent: stamp: 'GRC 10/15/2021 18:31:14'!
addParent: aPortfolio 

	parentPortfolios add: aPortfolio.!

!methodRemoval: Portfolio #addPortfolio: stamp: 'GRC 10/15/2021 18:31:16'!
addPortfolio: aPortfolio

	self assertCanAddPortfolio: aPortfolio.
	portfolios add: aPortfolio.
	aPortfolio addParent: self.!

!methodRemoval: Portfolio #addTo: stamp: 'GRC 10/15/2021 18:31:17'!
addTo: aPortfolio

	aPortfolio addPortfolio: self.!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:31:52' prior: 50916854!
add: aFinancialService

	aFinancialService addTo: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:32:30' prior: 50916997!
add: aFinancialService	

	aFinancialService addTo: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:33:50' prior: 50917002!
add: aFinancialService	

	financialServices add: aFinancialService.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:34:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:34:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:34:15'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:34:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:34:15'!
ERROR!
!PortfolioTest methodsFor: 'creation' stamp: 'GRC 10/15/2021 18:34:29' prior: 50915092!
createPortfolioWithAccounts: anAccountsList andPortfolios: aPortfoliosList 
	
	| portfolio |
	portfolio _ Portfolio new.
	
	anAccountsList do: [:anAccount | portfolio add: anAccount ].
	aPortfoliosList do: [:aPortfolio| portfolio add: aPortfolio ].
	
	^portfolio.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:34:35'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:34:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:34:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:34:35'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:34:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:34:35'!
ERROR!

FinancialService subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios financialServices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GRC 10/15/2021 18:35:05'!
FinancialService subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios financialServices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'GRC 10/15/2021 18:35:25' prior: 50915951 overrides: 16896425!
initialize

	parentPortfolios _ OrderedCollection new.
	
	financialServices _ OrderedCollection new.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:35:27'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:35:27'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:35:27'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:35:27'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:35:27'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:35:27'!
ERROR!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:35:27'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:35:27'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'GRC 10/15/2021 18:36:33' prior: 50915379!
balance

	^financialServices sum: [:aFinancialService | aFinancialService balance] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:36:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:36:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:36:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:36:36'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:36:36'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:36:36'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:36:36'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:36:36'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:36:36'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:36:36'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:36:36'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:36:36'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:36:36'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:36:36'!
ERROR!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:36:36'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:36:36'!
FAILURE!

!methodRemoval: Portfolio #accountsBalance stamp: 'GRC 10/15/2021 18:36:42'!
accountsBalance

	^ accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]!

!methodRemoval: Portfolio #portfoliosBalance stamp: 'GRC 10/15/2021 18:36:43'!
portfoliosBalance

	^ portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]!
!Portfolio methodsFor: 'accessing' stamp: 'GRC 10/15/2021 18:36:59' prior: 50915401!
hasRegistered: aTransaction

	^self transactions includes: aTransaction.! !
!Portfolio methodsFor: 'accessing' stamp: 'GRC 10/15/2021 18:38:00' prior: 50915406!
transactions
	
	^financialServices collect: [:aFinancialService | aFinancialService transactions].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:38:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:38:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:38:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:38:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:38:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:38:02'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'GRC 10/15/2021 18:38:25' prior: 50917299!
transactions
	
	^(financialServices collect: [:aFinancialService | aFinancialService transactions]) copy.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:38:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:38:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:38:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:38:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:38:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:38:26'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'GRC 10/15/2021 18:38:35' prior: 50917363!
transactions
	
	^financialServices collect: [:aFinancialService | aFinancialService transactions].! !

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:38:56'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:38:56'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:39:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:39:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:39:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:39:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:39:08'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:39:08'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:39:09'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:39:09'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'GRC 10/15/2021 18:39:32' prior: 50917427!
transactions
	
	^(financialServices collect: [:aFinancialService | aFinancialService transactions]) flatten.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:39:33'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:39:33'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:39:33'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:39:33'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:39:33'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:39:33'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:39:33'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:39:33'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:39:58' prior: 50914947!
test10PortfolioCannotAddItself

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self should: [portfolio add: portfolio] 
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:40:03' prior: 50914959!
test11PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio1}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddPortfolioErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:40:07' prior: 50914975!
test12PortfolioCannotAddExistingAccount

	| portfolio cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
		
	self should: [portfolio add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:40:11' prior: 50914991!
test13PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2 }.
	
	self should: [portfolio1 add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:40:15' prior: 50915010!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:40:29' prior: 50916080!
test18AddPortfolioWithExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 add: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:40:37' prior: 50916136!
test19AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	self should: [portfolio3 add: cuenta2]
		raise: Error
		withExceptionDo: [:anError | self assert: Portfolio cannotAddExistingAccountErrorDescription equals: anError messageText].! !

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:40:44'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:41:09'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:41:09'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:41:18'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:41:18'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:41:18'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:41:18'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:41:18'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:41:18'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:41:18'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:41:18'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:43:01' prior: 50917007!
add: aFinancialService	

	(self = aFinancialService) ifTrue: [self error: Error].

	financialServices add: aFinancialService.! !
!FinancialService class methodsFor: 'nil' stamp: 'GRC 10/15/2021 18:44:27'!
cannotAddExistingServiceErrorDescription

	^'Cannot add existing financial service'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:45:20' prior: 50917562!
test10PortfolioCannotAddItself

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self should: [portfolio add: portfolio] 
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:45:25' prior: 50917575!
test11PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio1}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:45:31' prior: 50917591!
test12PortfolioCannotAddExistingAccount

	| portfolio cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
		
	self should: [portfolio add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:45:36' prior: 50917607!
test13PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2 }.
	
	self should: [portfolio1 add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:45:42' prior: 50917626!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:45:53' prior: 50917648!
test18AddPortfolioWithExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 add: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 18:46:03' prior: 50917676!
test19AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	self should: [portfolio3 add: cuenta2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:46:16' prior: 50917769!
add: aFinancialService	

	(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices add: aFinancialService.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:46:17'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:46:17'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:46:17'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:46:17'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:46:17'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:46:17'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:46:17'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:47:24' prior: 50917923!
add: aFinancialService	

	(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices add: aFinancialService.
	
	aFinancialService addParent: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:48:01'!
addParent: aPortfolio

	parentPortfolios add: aPortfolio.! !
!ReceptiveAccount methodsFor: 'associating' stamp: 'GRC 10/15/2021 18:48:37'!
addParent: aPortfolio

	! !

!methodRemoval: ReceptiveAccount #addTo: stamp: 'GRC 10/15/2021 18:48:47'!
addTo: aPortfolio

	aPortfolio addAccount: self.!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 18:48:53'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 18:48:53'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 18:48:53'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 18:48:53'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 18:48:53'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:48:53'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 18:48:53'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 18:53:19' prior: 50917989!
add: aFinancialService	

	parentPortfolios isEmpty 
		ifTrue: [
			(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
		] 
		ifFalse: [
			parentPortfolios do: [:aPortfolio | ].
		].

	(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices add: aFinancialService.
	
	aFinancialService addParent: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:00:21'!
finantialServiceNotDuplicated: aFinancialService

	^ parentPortfolios isEmpty 
		ifTrue: [
			(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
		] 
		ifFalse: [
			parentPortfolios do: [:aPortfolio | ].
		]! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:00:22' prior: 50918068!
add: aFinancialService	

	self finantialServiceNotDuplicated: aFinancialService.

	(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices add: aFinancialService.
	
	aFinancialService addParent: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:00:36' prior: 50918095!
add: aFinancialService	

	self finantialServiceNotDuplicated: aFinancialService.

	financialServices add: aFinancialService.
	
	aFinancialService addParent: self.! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:01:25' prior: 50918084!
finantialServiceNotDuplicated: aFinancialService

	parentPortfolios isEmpty 
		ifTrue: [
			(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
		] 
		ifFalse: [
			parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialService ].
		]! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:01:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:01:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:01:30'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:01:30'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:01:30'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:01:30'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:01:30'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:01:30'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:05:59' prior: 50918115!
finantialServiceNotDuplicated: aFinancialService

	parentPortfolios isEmpty 
		ifTrue: [
			(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
			(financialServices includes: aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
		] 
		ifFalse: [
			parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialService ].
		]! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:06:00'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:06:00'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:06:00'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:06:01'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:06:01'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:06:01'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:09:01' prior: 50918186!
finantialServiceNotDuplicated: aFinancialService

	parentPortfolios isEmpty 
		ifTrue: [
			(self = aFinancialService) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
			financialServices do: [:aPortfolioFinancialService | aPortfolioFinancialService isDuplicated: aFinancialService ].
		] 
		ifFalse: [
			parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialService ].
		]! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:09:28'!
isDuplicated: aFinancialService

	! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:12:21' prior: 50918261!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [
			(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
			financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd ].
		] 
		ifFalse: [
			parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialServiceToAdd ].
		]! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:14:46' prior: 50918278!
isDuplicated: aFinancialServiceToAdd

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd ].! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:16:07' prior: 50918299!
isDuplicated: aFinancialServiceToAdd

	self = aFinancialServiceToAdd ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd ].! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:16:19' prior: 50918307!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd ].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:16:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:16:39'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:16:39'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:16:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:16:39'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:16:39'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:16:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:16:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:16:39'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:16:39'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:16:39'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:16:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:16:39'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:16:39'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:16:39'!
ERROR!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:16:39'!
ERROR!
!ReceptiveAccount methodsFor: 'nil' stamp: 'GRC 10/15/2021 19:17:02'!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GRC 10/15/2021 19:17:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GRC 10/15/2021 19:17:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GRC 10/15/2021 19:17:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GRC 10/15/2021 19:17:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GRC 10/15/2021 19:17:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GRC 10/15/2021 19:17:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GRC 10/15/2021 19:17:14'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:17:20'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:17:20'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:17:21'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:17:21'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:17:21'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:19:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:19:42'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:19:42'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:19:42'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:20:05' prior: 50918318!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd ].! !
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:24:23' prior: 50918535!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialServiceToAdd isDuplicated: aFinancialService ].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:24:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:24:25'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:24:25'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:24:25'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:24:44' prior: 50918546!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd ].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:24:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:24:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:24:45'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:24:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:24:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:24:45'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:24:45'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:24:45'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:27:15' prior: 50918282!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [
			self isDuplicated: aFinancialServiceToAdd.
		] 
		ifFalse: [
			parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialServiceToAdd ].
		]! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:27:19'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:27:19'!
FAILURE!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:27:19'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:27:41' prior: 50918615!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialServiceToAdd isDuplicated: aFinancialService ].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:27:42'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:27:42'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:27:42'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:29:30' prior: 50918752!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd. aFinancialServiceToAdd isDuplicated: aFinancialService ].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:29:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:29:34'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:29:34'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:29:34'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:29:34'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:44:06' prior: 50918821!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	aFinancialServiceToAdd isDuplicated: self.

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd ].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:44:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:44:35'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:45:00' prior: 50918891!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd. aFinancialServiceToAdd isDuplicated: aFinancialService ].! !
!Portfolio methodsFor: 'adding' stamp: 'GRC 10/15/2021 19:46:26' prior: 50918683!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self isDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !

----SNAPSHOT----(15 October 2021 19:46:49) CuisUniversity-4913.image priorSource: 18723050!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 19:46:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 19:46:56'!
PASSED!

----SNAPSHOT----(15 October 2021 19:47:35) CuisUniversity-4913.image priorSource: 18793090!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:49:19'!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService isDuplicated: aFinancialServiceToAdd. aFinancialServiceToAdd isDuplicated: aFinancialService ].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:49:19'!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:49:19' prior: 50918911!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService hasDuplicated: aFinancialServiceToAdd. aFinancialServiceToAdd hasDuplicated: aFinancialService ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:49:19' prior: 50918924!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:49:19' prior: 50918998!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService hasDuplicated: aFinancialServiceToAdd. aFinancialServiceToAdd hasDuplicated: aFinancialService ].! !

!methodRemoval: Portfolio #isDuplicated: stamp: 'GRC 10/15/2021 19:49:19'!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | aFinancialService hasDuplicated: aFinancialServiceToAdd. aFinancialServiceToAdd hasDuplicated: aFinancialService ].!

!methodRemoval: ReceptiveAccount #isDuplicated: stamp: 'GRC 10/15/2021 19:49:19'!
isDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:50:50' prior: 50919044!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !

----SNAPSHOT----(15 October 2021 19:53:35) CuisUniversity-4913.image priorSource: 18795013!
!Portfolio methodsFor: 'assertions' stamp: 'GRC 10/15/2021 19:56:06' prior: 50919077!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].

	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GRC 10/15/2021 19:56:48' prior: 50915471!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!FinancialService methodsFor: 'no messages' stamp: 'GRC 10/15/2021 19:58:27'!
add: aFinancialService	

	self subclassResponsibility.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:58:38'!
addParent: aPortfolio

	self subclassResponsibility.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:58:47'!
balance

	self subclassResponsibility.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:58:57'!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	self subclassResponsibility.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:59:07'!
hasDuplicated: aFinancialServiceToAdd

	self subclassResponsibility.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:59:15'!
hasRegistered: aTransaction

	self subclassResponsibility.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:59:47' overrides: 16896425!
initialize

	self subclassResponsibility.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'GRC 10/15/2021 19:59:56'!
transactions

	self subclassResponsibility.! !
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:13'!
test02PortfolioWithMultipleAccountsHasSumOfBalances

	| portfolio cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
	
	self assert: 150 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test04PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'GRC 10/15/2021 20:00:13'!
test04PortfolioWithMultipleAccountsHasSumOfBalances

	| portfolio cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
	
	self assert: 150 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:18'!
test03PortfolioWithPorfolioHasSumOfBalances

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: 150 equals: portfolio1 balance.! !

!methodRemoval: PortfolioTest #test05PortfolioWithPorfolioHasSumOfBalances stamp: 'GRC 10/15/2021 20:00:18'!
test05PortfolioWithPorfolioHasSumOfBalances

	| portfolio1 portfolio2 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: 150 equals: portfolio1 balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:23'!
test04PortfolioStartsWithNoTransactions

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self assert: portfolio transactions isEmpty.! !

!methodRemoval: PortfolioTest #test06PortfolioStartsWithNoTransactions stamp: 'GRC 10/15/2021 20:00:23'!
test06PortfolioStartsWithNoTransactions

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self assert: portfolio transactions isEmpty.!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:29'!
test05PortfolioHasAccountsTransactions

	| portfolio cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio _ self createPortfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
		
	self assert: transacciones equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test08PortfolioHasAccountsTransactions stamp: 'GRC 10/15/2021 20:00:29'!
test08PortfolioHasAccountsTransactions

	| portfolio cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio _ self createPortfolioWithAccounts: {cuenta1. cuenta2} andPortfolios: {}.
		
	self assert: transacciones equals: portfolio transactions.!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:34'!
test06PortfolioHasPortfoliosTransactions

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}. 
	portfolio1 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: transacciones equals: portfolio1 transactions.! !

!methodRemoval: PortfolioTest #test09PortfolioHasPortfoliosTransactions stamp: 'GRC 10/15/2021 20:00:34'!
test09PortfolioHasPortfoliosTransactions

	| portfolio1 portfolio2 cuenta1 cuenta2 transacciones |
	
	transacciones _ OrderedCollection new. 
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100. 10} andWithdrawalAmounts: {}.
	
	transacciones addAll: cuenta1 transactions.
	transacciones addAll: cuenta2 transactions.
	
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}. 
	portfolio1 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {portfolio2}.
	
	self assert: transacciones equals: portfolio1 transactions.!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:41'!
test07PortfolioCannotAddItself

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self should: [portfolio add: portfolio] 
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test10PortfolioCannotAddItself stamp: 'GRC 10/15/2021 20:00:41'!
test10PortfolioCannotAddItself

	| portfolio |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	
	self should: [portfolio add: portfolio] 
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:49'!
test08PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio1}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test11PortfolioCannotAddAPortfolioThatContainsIt stamp: 'GRC 10/15/2021 20:00:49'!
test11PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio1}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:00:56'!
test09PortfolioCannotAddExistingAccount

	| portfolio cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
		
	self should: [portfolio add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test12PortfolioCannotAddExistingAccount stamp: 'GRC 10/15/2021 20:00:56'!
test12PortfolioCannotAddExistingAccount

	| portfolio cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
		
	self should: [portfolio add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:01:01'!
test10PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2 }.
	
	self should: [portfolio1 add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test13PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'GRC 10/15/2021 20:01:01'!
test13PortfolioCannotAddAccountExistingInPortfolioGroup

	| portfolio1 portfolio2 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2 }.
	
	self should: [portfolio1 add: cuenta]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:01:06'!
test11PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddPortfolioWithExistingAccount stamp: 'GRC 10/15/2021 20:01:06'!
test14PortfolioCannotAddPortfolioWithExistingAccount

	| portfolio1 portfolio2 portfolio3 cuenta |
	
	cuenta _ self createAccountWithDepositAmounts: {} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:01:10'!
test12PortfolioStartsWithNoRegisteredTransactions

	| portfolio cuenta transaccion |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	
	transaccion _ cuenta transactions first.
	
	self deny: (portfolio hasRegistered: transaccion).! !

!methodRemoval: PortfolioTest #test15PortfolioStartsWithNoRegisteredTransactions stamp: 'GRC 10/15/2021 20:01:10'!
test15PortfolioStartsWithNoRegisteredTransactions

	| portfolio cuenta transaccion |
	
	portfolio _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	
	transaccion _ cuenta transactions first.
	
	self deny: (portfolio hasRegistered: transaccion).!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:01:15'!
test13PortfolioHasAccountTransactionsRegistered

	| portfolio cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	transaccion _ cuenta transactions first.
	
	self assert: (portfolio hasRegistered: transaccion).! !

!methodRemoval: PortfolioTest #test16PortfolioHasAccountTransactionsRegistered stamp: 'GRC 10/15/2021 20:01:15'!
test16PortfolioHasAccountTransactionsRegistered

	| portfolio cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	
	transaccion _ cuenta transactions first.
	
	self assert: (portfolio hasRegistered: transaccion).!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:01:19'!
test14PortfolioHasPortfoliosTransactionsRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2}.
	
	transaccion _ cuenta transactions first .
	
	self assert: (portfolio1 hasRegistered: transaccion).! !

!methodRemoval: PortfolioTest #test17PortfolioHasPortfoliosTransactionsRegistered stamp: 'GRC 10/15/2021 20:01:19'!
test17PortfolioHasPortfoliosTransactionsRegistered

	| portfolio1 portfolio2 portfolio3 cuenta transaccion |
	
	cuenta _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	portfolio3 _ self createPortfolioWithAccounts: {cuenta} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio2}.
	
	transaccion _ cuenta transactions first .
	
	self assert: (portfolio1 hasRegistered: transaccion).!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:01:24'!
test15AddPortfolioWithExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 add: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test18AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 20:01:24'!
test18AddPortfolioWithExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 add: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:01:30'!
test16AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	self should: [portfolio3 add: cuenta2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test19AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 20:01:30'!
test19AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	self should: [portfolio3 add: cuenta2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:02:14'!
test15PortfolioCannotAddPortfolioWithExistingAccountInTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 add: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test15AddPortfolioWithExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 20:02:14'!
test15AddPortfolioWithExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	portfolio4 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {}.
	
	self should: [portfolio3 add: portfolio4]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!
!PortfolioTest methodsFor: 'tests' stamp: 'GRC 10/15/2021 20:02:49'!
test16PortfolioCannotAddExistingAccountInTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	self should: [portfolio3 add: cuenta2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !

!methodRemoval: PortfolioTest #test16AddExistingAccountInPortfolioTree stamp: 'GRC 10/15/2021 20:02:49'!
test16AddExistingAccountInPortfolioTree

	| portfolio1 portfolio2 portfolio3 portfolio4 cuenta1 cuenta2 |
	
	cuenta1 _ self createAccountWithDepositAmounts: {50} andWithdrawalAmounts: {}.
	cuenta2 _ self createAccountWithDepositAmounts: {100} andWithdrawalAmounts: {}.
	
	portfolio3 _ self createPortfolioWithAccounts: {cuenta1} andPortfolios: {}.
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio3}.
	portfolio2 _ self createPortfolioWithAccounts: {cuenta2} andPortfolios: {portfolio3}.
	
	self should: [portfolio3 add: cuenta2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].!

----SNAPSHOT----(15 October 2021 20:02:52) CuisUniversity-4913.image priorSource: 18798052!

----SNAPSHOT----(15 October 2021 20:08:03) CuisUniversity-4913.image priorSource: 18820947!

----QUIT----(15 October 2021 20:08:31) CuisUniversity-4913.image priorSource: 18821040!

----STARTUP---- (18 October 2021 14:13:29) as C:\Users\DESKTOP-MIGUE\Desktop\windows64\CuisUniversity-4913.image!


----End fileIn of \Users\DESKTOP-MIGUE\Desktop\windows64\Portfolio-Ejercicio.st----!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:14:56' prior: 50915447 overrides: 50915373!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:17:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:17:56'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 14:18:56' prior: 50915468 overrides: 50915396!
add: aFinancialService	

	self finantialServiceNotDuplicated: aFinancialService.

	financialServices add: aFinancialService.
	
	aFinancialService addParent: self.! !
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 14:18:59' prior: 50915477 overrides: 50915401!
addParent: aPortfolio

	parentPortfolios add: aPortfolio.! !
!Portfolio methodsFor: 'initialization' stamp: 'MR 10/18/2021 14:19:03' prior: 50915461 overrides: 50915392!
initialize

	parentPortfolios _ OrderedCollection new.
	
	financialServices _ OrderedCollection new.! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:19:08' prior: 50915435 overrides: 50915367!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !
!ReceptiveAccount methodsFor: 'private' stamp: 'MR 10/18/2021 14:19:18' prior: 50915567 overrides: 50915373!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].! !

!methodRemoval: ReceptiveAccount #hasDuplicated: stamp: 'MR 10/18/2021 14:20:06'!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].!
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:20:11' prior: 50915373!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription ].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:20:13'!
PASSED!

!methodRemoval: ReceptiveAccount #addParent: stamp: 'MR 10/18/2021 14:20:33'!
addParent: aPortfolio

	!
!FinancialService methodsFor: 'adding' stamp: 'MR 10/18/2021 14:20:39' prior: 50915401!
addParent: aPortfolio! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:20:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:20:42'!
PASSED!
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:21:59'!
financialServiceNotDuplicated: aFinancialServiceToAdd

	self subclassResponsibility.! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:22:00' overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 14:22:00' prior: 50915649 overrides: 50915396!
add: aFinancialService	

	self financialServiceNotDuplicated: aFinancialService.

	financialServices add: aFinancialService.
	
	aFinancialService addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 14:22:00' prior: 50915671 overrides: 50915367!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 14:22:00' prior: 50915835 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !

!methodRemoval: FinancialService #finantialServiceNotDuplicated: stamp: 'MR 10/18/2021 14:22:00'!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	self subclassResponsibility.!

!methodRemoval: Portfolio #finantialServiceNotDuplicated: stamp: 'MR 10/18/2021 14:22:00'!
finantialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]).
		!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:22:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:22:02'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 14:23:08' prior: 50915847 overrides: 50915396!
add: aFinancialService	

	self financialServiceNotDuplicated: aFinancialService.

	financialServices add: aFinancialService.
	
	aFinancialService addParent: self.! !

!methodRemoval: Portfolio class #cannotAddExistingAccountErrorDescription stamp: 'MR 10/18/2021 14:24:19'!
cannotAddExistingAccountErrorDescription

	^'Cannot add existing account'.!

!methodRemoval: Portfolio class #cannotAddPortfolioErrorDescription stamp: 'MR 10/18/2021 14:24:21'!
cannotAddPortfolioErrorDescription

	^'Cannot add portfolio'.!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:24:38'!
PASSED!

----End fileIn of C:\Users\DESKTOP-MIGUE\Desktop\windows64\Packages\TerseGuide.pck.st----!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:26:40' prior: 50915578 overrides: 50915699!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [^true].
	
	financialServices anySatisfy: [:aFinancialService | 
		(aFinancialService hasDuplicated: aFinancialServiceToAdd) or: (aFinancialServiceToAdd hasDuplicated: aFinancialService).
	].! !
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:26:47' prior: 50915699!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [^true].! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:27:33' prior: 50915868 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [^parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]].
		! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:27:45' prior: 50918957 overrides: 50918969!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [^true].
	
	financialServices anySatisfy: [:aFinancialService | 
		(aFinancialService hasDuplicated: aFinancialServiceToAdd) or: (aFinancialServiceToAdd hasDuplicated: aFinancialService).
	].

	^false.! !
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:28:02' prior: 50918969!
hasDuplicated: aFinancialServiceToAdd

	^self = aFinancialServiceToAdd.! !
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 14:28:27' prior: 50915954 overrides: 50915396!
add: aFinancialService	

	(self financialServiceNotDuplicated: aFinancialService)
		ifFalse: [
			financialServices add: aFinancialService.
			aFinancialService addParent: self.
		]! !
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 14:28:41' prior: 50919006 overrides: 50915396!
add: aFinancialService	

	(self financialServiceNotDuplicated: aFinancialService)
		ifFalse: [
			financialServices add: aFinancialService.
			aFinancialService addParent: self.
		]
		ifTrue: [
			
		].! !
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 14:28:54' prior: 50919015 overrides: 50915396!
add: aFinancialService	

	(self financialServiceNotDuplicated: aFinancialService)
		ifFalse: [
			financialServices add: aFinancialService.
			aFinancialService addParent: self.
		]
		ifTrue: [
			self error: FinancialService cannotAddExistingServiceErrorDescription.
		].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:28:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:28:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:28:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:28:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:28:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:28:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:28:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:28:55'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:28:55'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:28:55'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:28:55'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:28:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:28:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:28:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:28:55'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:28:55'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:29:51' prior: 50918976 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [^parentPortfolios anySatisfy: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]].
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:29:53'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:29:53'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:29:53'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:29:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:29:53'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:29:53'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:30:16' prior: 50919095 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]].
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:30:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:30:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:30:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:30:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:30:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:30:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:30:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:30:23'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:30:24'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:30:24'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:30:24'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:30:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:30:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:30:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:30:24'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:30:24'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:30:29'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:30:29'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:30:29'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:30:29'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:30:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:30:29'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:30:29'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:30:31'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:30:39'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:31:12'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:33:02' prior: 50918988 overrides: 50919000!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [^true].
	
	^financialServices anySatisfy: [:aFinancialService | 
		(aFinancialService hasDuplicated: aFinancialServiceToAdd) or: (aFinancialServiceToAdd hasDuplicated: aFinancialService).
	].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:33:04'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:33:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:33:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:33:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:33:05'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:33:05'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:34:45'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:34:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:34:45'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:34:45'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:34:47'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'MR 10/18/2021 14:35:18' prior: 50914961!
test08PortfolioCannotAddAPortfolioThatContainsIt

	| portfolio1 portfolio2 |
	
	portfolio1 _ self createPortfolioWithAccounts: {} andPortfolios: {}.
	portfolio2 _ self createPortfolioWithAccounts: {} andPortfolios: {portfolio1}.
	
	self should: [portfolio1 add: portfolio2]
		raise: Error
		withExceptionDo: [:anError | self assert: FinancialService cannotAddExistingServiceErrorDescription equals: anError messageText].! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:39:16' prior: 50919164 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	^parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]].
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:39:17'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:39:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:39:17'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:39:17'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:39:21' prior: 50919448 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]].
		! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:39:31' prior: 50919517 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]].
		! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:39:45' prior: 50919529 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	^parentPortfolios isEmpty 
		ifTrue: [self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]].
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:39:46'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:39:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:39:46'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:39:46'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:14:56' prior: 50919301 overrides: 50919000!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:22:00' prior: 50919541 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio finantialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:40:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:40:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:40:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:40:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:40:38'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:40:39'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:40:39'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:40:39'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 14:41:00' prior: 50919025 overrides: 50915396!
add: aFinancialService	

	self financialServiceNotDuplicated: aFinancialService.

	financialServices add: aFinancialService.
	aFinancialService addParent: self.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:41:01'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:41:01'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:41:01'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:41:01'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:41:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:41:01'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:41:01'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:41:10' prior: 50919624 overrides: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:41:11'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:41:11'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:41:11'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:41:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:41:11'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:41:11'!
FAILURE!
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:41:54' prior: 50919000!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:41:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:41:57'!
PASSED!
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:42:03' prior: 50915829!
financialServiceNotDuplicated: aFinancialServiceToAdd

	self subclassResponsibility.! !
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:46:44'!
notIncludedInTree: aFinancialServiceToAdd

	self subclassResponsibility.! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:46:44' overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 14:46:44' prior: 50919758 overrides: 50919892!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 14:46:44' prior: 50919692 overrides: 50915396!
add: aFinancialService	

	self notIncludedInTree: aFinancialService.

	financialServices add: aFinancialService.
	aFinancialService addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 14:46:44' prior: 50919904 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !

!methodRemoval: FinancialService #financialServiceNotDuplicated: stamp: 'MR 10/18/2021 14:46:44'!
financialServiceNotDuplicated: aFinancialServiceToAdd

	self subclassResponsibility.!

!methodRemoval: Portfolio #financialServiceNotDuplicated: stamp: 'MR 10/18/2021 14:46:44'!
financialServiceNotDuplicated: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:46:46'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:46:46'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:47:27' prior: 50919610 overrides: 50919827!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		"aFinancialServiceToAdd hasDuplicated: aFinancialService."
	].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:47:27'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:47:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:47:27'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:47:27'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:47:43' prior: 50920022 overrides: 50919827!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		"aFinancialService hasDuplicated: aFinancialServiceToAdd."
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:47:43'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:47:43'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:47:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:47:43'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:48:00' prior: 50920093 overrides: 50919827!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'MR 10/18/2021 14:53:09' prior: 50915545 overrides: 50915387!
transactions 

	^ transactions! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MR 10/18/2021 14:53:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MR 10/18/2021 14:53:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MR 10/18/2021 14:53:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MR 10/18/2021 14:53:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MR 10/18/2021 14:53:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MR 10/18/2021 14:53:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MR 10/18/2021 14:53:10'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:53:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:53:17'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'MR 10/18/2021 14:55:23' prior: 50915488 overrides: 50915382!
hasRegistered: aTransaction

	^financialServices anySatisfy: [:aFinancialService | aFinancialService hasRegistered: aTransaction].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 14:55:24'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'MR 10/18/2021 14:55:30' prior: 50920266 overrides: 50915382!
hasRegistered: aTransaction

	^financialServices anySatisfy: [:aFinancialService | aFinancialService hasRegistered: aTransaction].! !
!Portfolio methodsFor: 'accessing' stamp: 'MR 10/18/2021 14:55:34' prior: 50915482 overrides: 50915378!
balance

	^financialServices sum: [:aFinancialService | aFinancialService balance] ifEmpty: [0].! !
!Portfolio methodsFor: 'accessing' stamp: 'MR 10/18/2021 14:55:59' prior: 50915494 overrides: 50915387!
transactions
	
	^(financialServices collect: [:aFinancialService | aFinancialService transactions]) flatten.! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:58:16' prior: 50920164 overrides: 50919827!
hasDuplicated: aFinancialServiceToAdd
	
	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:15:45'!
isNotEqual: aFinancialServiceToAdd

	^ (self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription]! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:15:45' prior: 50920353 overrides: 50919827!
hasDuplicated: aFinancialServiceToAdd
	
	self isNotEqual: aFinancialServiceToAdd.
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !

!methodRemoval: Portfolio #isNotEqual: stamp: 'MR 10/18/2021 15:16:43'!
isNotEqual: aFinancialServiceToAdd

	^ (self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription]!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:16:51' prior: 50920375 overrides: 50919827!
hasDuplicated: aFinancialServiceToAdd
	
	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:20:35' prior: 50920394 overrides: 50919827!
hasDuplicated: aFinancialServiceToAdd
"
	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].
"

	financialServices anySatisfy: [:aFinancialService | aFinancialService unMensaje: aFinancialServiceToAdd].

! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:21:17'!
unMensaje: aFinancialServiceToAdd
	self hasDuplicated: aFinancialServiceToAdd.
	aFinancialServiceToAdd hasDuplicated: self.
! !
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:21:30'!
unMensaje: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].! !
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:22:13' prior: 50919827!
hasDuplicated: aFinancialServiceToAdd

	self subclassResponsibility.! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:22:27' prior: 50920424 overrides: 50920431!
unMensaje: aFinancialServiceToAdd
	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	self hasDuplicated: aFinancialServiceToAdd.
	aFinancialServiceToAdd hasDuplicated: self.
! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:22:48' prior: 50920408 overrides: 50920439!
hasDuplicated: aFinancialServiceToAdd
"
	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].
"

	^financialServices anySatisfy: [:aFinancialService | aFinancialService unMensaje: aFinancialServiceToAdd].

! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:23:40' prior: 50920445 overrides: 50920431!
unMensaje: aFinancialServiceToAdd
	(self = aFinancialServiceToAdd) ifTrue: [^true].
	
	^(self hasDuplicated: aFinancialServiceToAdd) or: (aFinancialServiceToAdd hasDuplicated: self).
! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:24:22' prior: 50919937 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 15:24:54' prior: 50919928 overrides: 50915396!
add: aFinancialService	

	(self notIncludedInTree: aFinancialService)
		ifTrue: [
			financialServices add: aFinancialService.
			aFinancialService addParent: self.
		]
		ifFalse: [
			self error: FinancialService cannotAddExistingServiceErrorDescription
		]! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:25:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:25:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:25:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:25:09'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:25:09'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:25:09'!
ERROR!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:27:11' prior: 50920484 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: (parentPortfolios allSatisfy: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:27:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:27:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:27:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:27:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:27:12'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:27:12'!
ERROR!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:27:18' prior: 50920564 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: (parentPortfolios allSatisfy: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd not ]).
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:27:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:27:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:27:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:27:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:27:19'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:27:19'!
ERROR!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:27:50' prior: 50920632 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: (parentPortfolios anySatisfy: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:28:03' prior: 50920700 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: [^parentPortfolios anySatisfy: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]].
		! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:28:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:28:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:28:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:28:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:28:04'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:28:04'!
ERROR!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:46:44' prior: 50920711 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio financialServiceNotDuplicated: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:28:20' prior: 50920779 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: [^self hasDuplicated: aFinancialServiceToAdd]
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:28:25' prior: 50920791 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self hasDuplicated: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:28:38' prior: 50920456 overrides: 50920439!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].

! !

!methodRemoval: FinancialService #unMensaje: stamp: 'MR 10/18/2021 15:28:45'!
unMensaje: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].!

!methodRemoval: Portfolio #unMensaje: stamp: 'MR 10/18/2021 15:28:47'!
unMensaje: aFinancialServiceToAdd
	(self = aFinancialServiceToAdd) ifTrue: [^true].
	
	^(self hasDuplicated: aFinancialServiceToAdd) or: (aFinancialServiceToAdd hasDuplicated: self).
!
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 14:41:54' prior: 50920439!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:29:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:29:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:29:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:29:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:29:10'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:29:10'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'MR 10/18/2021 15:30:03' prior: 50920495 overrides: 50915396!
add: aFinancialService	

	self notIncludedInTree: aFinancialService.
	
	financialServices add: aFinancialService.
	aFinancialService addParent: self.! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:30:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:30:04'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:35:13' prior: 50920813 overrides: 50920842!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].

	"
	
	"

! !

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MR 10/18/2021 15:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MR 10/18/2021 15:35:13'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:36:24' prior: 50920973 overrides: 50920842!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].

! !
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:41:25'!
notAlreadyIncluded: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:41:25' overrides: 50921084!
notAlreadyIncluded: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService hasDuplicated: aFinancialServiceToAdd.
		aFinancialServiceToAdd hasDuplicated: aFinancialService.
	].

! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 15:41:25' prior: 50921071 overrides: 50920842!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService notAlreadyIncluded: aFinancialServiceToAdd.
		aFinancialServiceToAdd notAlreadyIncluded: aFinancialService.
	].

! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 15:41:25' prior: 50920802 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self notAlreadyIncluded: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 15:41:25' prior: 50921092 overrides: 50921084!
notAlreadyIncluded: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService notAlreadyIncluded: aFinancialServiceToAdd.
		aFinancialServiceToAdd notAlreadyIncluded: aFinancialService.
	].

! !

!methodRemoval: FinancialService #hasDuplicated: stamp: 'MR 10/18/2021 15:41:25'!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].!

!methodRemoval: Portfolio #hasDuplicated: stamp: 'MR 10/18/2021 15:41:25'!
hasDuplicated: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService notAlreadyIncluded: aFinancialServiceToAdd.
		aFinancialServiceToAdd notAlreadyIncluded: aFinancialService.
	].

!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:41:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:41:39'!
PASSED!
!FinancialService methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:44:20'!
noNodesInCommon: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].! !
!Portfolio methodsFor: 'assertions' stamp: 'MR 10/18/2021 15:44:20' overrides: 50921224!
noNodesInCommon: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService notAlreadyIncluded: aFinancialServiceToAdd.
		aFinancialServiceToAdd notAlreadyIncluded: aFinancialService.
	].

! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 15:44:20' prior: 50921121 overrides: 50919898!
notIncludedInTree: aFinancialServiceToAdd

	parentPortfolios isEmpty 
		ifTrue: (self noNodesInCommon: aFinancialServiceToAdd)
		ifFalse: (parentPortfolios do: [:aPortfolio | aPortfolio notIncludedInTree: aFinancialServiceToAdd ]).
		! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 15:44:20' prior: 50921133 overrides: 50921084!
notAlreadyIncluded: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService noNodesInCommon: aFinancialServiceToAdd.
		aFinancialServiceToAdd noNodesInCommon: aFinancialService.
	].

! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MR 10/18/2021 15:44:20' prior: 50921232 overrides: 50921224!
noNodesInCommon: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService noNodesInCommon: aFinancialServiceToAdd.
		aFinancialServiceToAdd noNodesInCommon: aFinancialService.
	].

! !

!methodRemoval: FinancialService #notAlreadyIncluded: stamp: 'MR 10/18/2021 15:44:20'!
notAlreadyIncluded: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].!

!methodRemoval: Portfolio #notAlreadyIncluded: stamp: 'MR 10/18/2021 15:44:20'!
notAlreadyIncluded: aFinancialServiceToAdd

	(self = aFinancialServiceToAdd) ifTrue: [self error: FinancialService cannotAddExistingServiceErrorDescription].
	
	financialServices do: [:aFinancialService | 
		aFinancialService noNodesInCommon: aFinancialServiceToAdd.
		aFinancialServiceToAdd noNodesInCommon: aFinancialService.
	].

!

!testRun: #PortfolioTest #test01PortfolioStartsWithBalanceOfZero stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithMultipleAccountsHasSumOfBalances stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithPorfolioHasSumOfBalances stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioStartsWithNoTransactions stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasAccountsTransactions stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasPortfoliosTransactions stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddItself stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAPortfolioThatContainsIt stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddExistingAccount stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountExistingInPortfolioGroup stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCannotAddPortfolioWithExistingAccount stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioStartsWithNoRegisteredTransactions stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasAccountTransactionsRegistered stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasPortfoliosTransactionsRegistered stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddPortfolioWithExistingAccountInTree stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddExistingAccountInTree stamp: 'MR 10/18/2021 15:44:26'!
PASSED!

----SNAPSHOT----(18 October 2021 15:44:56) CuisUniversity-4913.image priorSource: 18661997!